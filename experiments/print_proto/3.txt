I0921 21:03:50.849354  5174 caffe.cpp:113] Use GPU with device ID 0
I0921 21:03:51.154016  5174 caffe.cpp:121] Starting Optimization
I0921 21:03:51.154129  5174 solver.cpp:32] Initializing solver from parameters: 
test_iter: 140
test_interval: 1000
base_lr: 0.001
display: 20
max_iter: 100000
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 10000
snapshot: 1000
snapshot_prefix: "snapshots_iter1_nogate/snapshots_s1"
solver_mode: GPU
net: "BP_RNN_ACTION.prototxt"
I0921 21:03:51.154160  5174 solver.cpp:70] Creating training net from net file: BP_RNN_ACTION.prototxt
I0921 21:03:51.157174  5174 net.cpp:261] The NetState phase (0) differed from the phase (1) specified by a rule in layer data_action
I0921 21:03:51.157203  5174 net.cpp:261] The NetState phase (0) differed from the phase (1) specified by a rule in layer data_pose
I0921 21:03:51.157222  5174 net.cpp:261] The NetState phase (0) differed from the phase (1) specified by a rule in layer data_frame
I0921 21:03:51.157244  5174 net.cpp:261] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy_scene
I0921 21:03:51.157250  5174 net.cpp:261] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy_action
I0921 21:03:51.157255  5174 net.cpp:261] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy_pose
I0921 21:03:51.158092  5174 net.cpp:42] Initializing net from parameters: 
name: "CaffeNet"
force_backward: true
state {
  phase: TRAIN
}
layer {
  name: "data_action"
  type: "Data"
  top: "data_action"
  top: "label_action"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: false
    crop_size: 227
    mean_file: "imagenet_mean.binaryproto"
  }
  data_param {
    source: "/cs/vml2/zhiweid/CVPR16_NEW/bp-rnn/experiments/0419_context/CAD_train_lmdb_0419_context"
    batch_size: 70
    backend: LMDB
  }
}
layer {
  name: "conv1_action"
  type: "Convolution"
  bottom: "data_action"
  top: "conv1_action"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1_action"
  type: "ReLU"
  bottom: "conv1_action"
  top: "conv1_action"
}
layer {
  name: "pool1_action"
  type: "Pooling"
  bottom: "conv1_action"
  top: "pool1_action"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1_action"
  type: "LRN"
  bottom: "pool1_action"
  top: "norm1_action"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2_action"
  type: "Convolution"
  bottom: "norm1_action"
  top: "conv2_action"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2_action"
  type: "ReLU"
  bottom: "conv2_action"
  top: "conv2_action"
}
layer {
  name: "pool2_action"
  type: "Pooling"
  bottom: "conv2_action"
  top: "pool2_action"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2_action"
  type: "LRN"
  bottom: "pool2_action"
  top: "norm2_action"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3_action"
  type: "Convolution"
  bottom: "norm2_action"
  top: "conv3_action"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3_action"
  type: "ReLU"
  bottom: "conv3_action"
  top: "conv3_action"
}
layer {
  name: "conv4_action"
  type: "Convolution"
  bottom: "conv3_action"
  top: "conv4_action"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4_action"
  type: "ReLU"
  bottom: "conv4_action"
  top: "conv4_action"
}
layer {
  name: "conv5_action"
  type: "Convolution"
  bottom: "conv4_action"
  top: "conv5_action"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5_action"
  type: "ReLU"
  bottom: "conv5_action"
  top: "conv5_action"
}
layer {
  name: "pool5_action"
  type: "Pooling"
  bottom: "conv5_action"
  top: "pool5_action"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6_action"
  type: "InnerProduct"
  bottom: "pool5_action"
  top: "fc6_action"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6_action"
  type: "ReLU"
  bottom: "fc6_action"
  top: "fc6_action"
}
layer {
  name: "drop6_action"
  type: "Dropout"
  bottom: "fc6_action"
  top: "fc6_action"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7_action"
  type: "InnerProduct"
  bottom: "fc6_action"
  top: "fc7_action"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu7_action"
  type: "ReLU"
  bottom: "fc7_action"
  top: "fc7_action"
}
layer {
  name: "drop7_action"
  type: "Dropout"
  bottom: "fc7_action"
  top: "fc7_action"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8_CAD_action"
  type: "InnerProduct"
  bottom: "fc7_action"
  top: "fc8_CAD_action_unnorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 7
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "prob_action_cad"
  type: "Softmax"
  bottom: "fc8_CAD_action_unnorm"
  top: "fc8_CAD_action"
}
layer {
  name: "data_pose"
  type: "Data"
  top: "data_pose"
  top: "label_pose"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 227
    mean_file: "imagenet_mean.binaryproto"
  }
  data_param {
    source: "/cs/vml2/zhiweid/CVPR16_NEW/bp-rnn/experiments/0419_context/CAD_train_lmdb_0419_context"
    batch_size: 70
    backend: LMDB
  }
}
layer {
  name: "conv1_pose"
  type: "Convolution"
  bottom: "data_pose"
  top: "conv1_pose"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1_pose"
  type: "ReLU"
  bottom: "conv1_pose"
  top: "conv1_pose"
}
layer {
  name: "pool1_pose"
  type: "Pooling"
  bottom: "conv1_pose"
  top: "pool1_pose"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1_pose"
  type: "LRN"
  bottom: "pool1_pose"
  top: "norm1_pose"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2_pose"
  type: "Convolution"
  bottom: "norm1_pose"
  top: "conv2_pose"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2_pose"
  type: "ReLU"
  bottom: "conv2_pose"
  top: "conv2_pose"
}
layer {
  name: "pool2_pose"
  type: "Pooling"
  bottom: "conv2_pose"
  top: "pool2_pose"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2_pose"
  type: "LRN"
  bottom: "pool2_pose"
  top: "norm2_pose"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3_pose"
  type: "Convolution"
  bottom: "norm2_pose"
  top: "conv3_pose"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3_pose"
  type: "ReLU"
  bottom: "conv3_pose"
  top: "conv3_pose"
}
layer {
  name: "conv4_pose"
  type: "Convolution"
  bottom: "conv3_pose"
  top: "conv4_pose"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4_pose"
  type: "ReLU"
  bottom: "conv4_pose"
  top: "conv4_pose"
}
layer {
  name: "conv5_pose"
  type: "Convolution"
  bottom: "conv4_pose"
  top: "conv5_pose"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5_pose"
  type: "ReLU"
  bottom: "conv5_pose"
  top: "conv5_pose"
}
layer {
  name: "pool5_pose"
  type: "Pooling"
  bottom: "conv5_pose"
  top: "pool5_pose"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6_pose"
  type: "InnerProduct"
  bottom: "pool5_pose"
  top: "fc6_pose"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6_pose"
  type: "ReLU"
  bottom: "fc6_pose"
  top: "fc6_pose"
}
layer {
  name: "drop6_pose"
  type: "Dropout"
  bottom: "fc6_pose"
  top: "fc6_pose"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7_pose"
  type: "InnerProduct"
  bottom: "fc6_pose"
  top: "fc7_pose"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu7_pose"
  type: "ReLU"
  bottom: "fc7_pose"
  top: "fc7_pose"
}
layer {
  name: "drop7_pose"
  type: "Dropout"
  bottom: "fc7_pose"
  top: "fc7_pose"
  dropout_param {
    dropout_ratio: 0.4
  }
}
layer {
  name: "fc8_CAD_pose"
  type: "InnerProduct"
  bottom: "fc7_pose"
  top: "fc8_CAD_pose"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 8
    bias_term: true
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "data_frame"
  type: "Data"
  top: "data_frame"
  top: "label_frame"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 227
    mean_file: "imagenet_mean.binaryproto"
  }
  data_param {
    source: "/cs/vml2/zhiweid/CVPR16_NEW/bp-rnn/experiments/0419_context/CAD_train_lmdb_0419_frame_context"
    batch_size: 5
    backend: LMDB
  }
}
layer {
  name: "conv1_frame"
  type: "Convolution"
  bottom: "data_frame"
  top: "conv1_frame"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1_frame"
  type: "ReLU"
  bottom: "conv1_frame"
  top: "conv1_frame"
}
layer {
  name: "pool1_frame"
  type: "Pooling"
  bottom: "conv1_frame"
  top: "pool1_frame"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1_frame"
  type: "LRN"
  bottom: "pool1_frame"
  top: "norm1_frame"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2_frame"
  type: "Convolution"
  bottom: "norm1_frame"
  top: "conv2_frame"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2_frame"
  type: "ReLU"
  bottom: "conv2_frame"
  top: "conv2_frame"
}
layer {
  name: "pool2_frame"
  type: "Pooling"
  bottom: "conv2_frame"
  top: "pool2_frame"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2_frame"
  type: "LRN"
  bottom: "pool2_frame"
  top: "norm2_frame"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3_frame"
  type: "Convolution"
  bottom: "norm2_frame"
  top: "conv3_frame"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3_frame"
  type: "ReLU"
  bottom: "conv3_frame"
  top: "conv3_frame"
}
layer {
  name: "conv4_frame"
  type: "Convolution"
  bottom: "conv3_frame"
  top: "conv4_frame"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4_frame"
  type: "ReLU"
  bottom: "conv4_frame"
  top: "conv4_frame"
}
layer {
  name: "conv5_frame"
  type: "Convolution"
  bottom: "conv4_frame"
  top: "conv5_frame"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5_frame"
  type: "ReLU"
  bottom: "conv5_frame"
  top: "conv5_frame"
}
layer {
  name: "pool5_frame"
  type: "Pooling"
  bottom: "conv5_frame"
  top: "pool5_frame"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6_frame"
  type: "InnerProduct"
  bottom: "pool5_frame"
  top: "fc6_frame"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6_frame"
  type: "ReLU"
  bottom: "fc6_frame"
  top: "fc6_frame"
}
layer {
  name: "drop6_frame"
  type: "Dropout"
  bottom: "fc6_frame"
  top: "fc6_frame"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7_frame"
  type: "InnerProduct"
  bottom: "fc6_frame"
  top: "fc7_frame"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu7_frame"
  type: "ReLU"
  bottom: "fc7_frame"
  top: "fc7_frame"
}
layer {
  name: "drop7_frame"
  type: "Dropout"
  bottom: "fc7_frame"
  top: "fc7_frame"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8_CAD_frame"
  type: "InnerProduct"
  bottom: "fc7_frame"
  top: "fc8_CAD_frame"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 5
    bias_term: true
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "prob_frame"
  type: "Softmax"
  bottom: "fc8_CAD_frame"
  top: "fc8_CAD_frame_prob"
}
layer {
  name: "prob_action"
  type: "Softmax"
  bottom: "fc8_CAD_action"
  top: "fc8_CAD_prob"
}
layer {
  name: "prob_pose"
  type: "Softmax"
  bottom: "fc8_CAD_pose"
  top: "fc8_CAD_pose_prob"
}
layer {
  name: "concatenation_a_p"
  type: "Concat"
  bottom: "fc8_CAD_prob"
  bottom: "fc8_CAD_pose_prob"
  top: "concat_action_pose"
  concat_param {
    concat_dim: 1
  }
}
layer {
  name: "fc9"
  type: "InnerProduct"
  bottom: "concat_action_pose"
  top: "fc9_unnorm"
  param {
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 40
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "prob_action_pose"
  type: "Softmax"
  bottom: "fc9_unnorm"
  top: "fc9"
}
layer {
  name: "Data_arrange_layer_filter"
  type: "Python"
  bottom: "fc8_CAD_action"
  bottom: "label_action"
  bottom: "fc9"
  top: "fc9_filtered"
  python_param {
    module: "Data_arrange"
    layer: "Data_Arrange_Layer"
  }
}
layer {
  name: "concatenation_s_a_p"
  type: "Concat"
  bottom: "fc8_CAD_frame_prob"
  bottom: "fc9_filtered"
  top: "concat_all"
  concat_param {
    concat_dim: 1
  }
}
layer {
  name: "Data_arrange_layer_init_message"
  type: "Python"
  bottom: "concat_all"
  bottom: "label_action"
  top: "Initial_Messages"
  python_param {
    module: "Initialize_Message"
    layer: "Initial_Message"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network"
  type: "BP_RNN"
  bottom: "Initial_Messages"
  bottom: "concat_all"
  bottom: "label_action"
  bottom: "fc8_CAD_frame"
  bottom: "concat_all"
  top: "action_pred"
  top: "scene_pred"
  param {
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  bp_recurrent_param {
    num_output: 1000
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    num_iteration: 3
    num_frame: 0
    num_people: 14
    scene_class: 5
    action_class: 7
  }
}
layer {
  name: "Data_arrange_layer_filter_mean"
  type: "Python"
  bottom: "action_pred"
  bottom: "label_action"
  top: "action_pred_clean"
  top: "label_action_clean"
  python_param {
    module: "Data_Arrange_Loss_Action"
    layer: "Data_Arrange_Layer"
  }
}
layer {
  name: "Data_arrange_layer_accu"
  type: "Python"
  bottom: "action_pred_clean"
  bottom: "label_action"
  top: "action_pred_final"
  top: "label_action_accu"
  python_param {
    module: "Data_Arrange_Accuracy_Action"
    layer: "Data_Arrange_Layer"
  }
}
layer {
  name: "scene_accuracy_arrange"
  type: "Python"
  bottom: "scene_pred"
  top: "scene_pred_final"
  python_param {
    module: "Data_Arrange_Accuracy_Scene"
    layer: "Data_Arrange_Layer"
  }
}
layer {
  name: "scene_loss_arrange"
  type: "Python"
  bottom: "scene_pred"
  bottom: "label_frame"
  bottom: "fc8_CAD_frame"
  top: "scene_pred_all"
  top: "scene_label_all"
  python_param {
    module: "Data_Arrange_Loss_Scene"
    layer: "Data_Arrange_Layer"
  }
}
layer {
  name: "silence_layer"
  type: "Python"
  bottom: "scene_pred_final"
  bottom: "label_frame"
  bottom: "label_action_accu"
  bottom: "scene_pred_all"
  bottom: "action_pred_clean"
  bottom: "action_pred"
  bottom: "action_pred_final"
  python_param {
    module: "Silence"
    layer: "Silence_Layer"
  }
}
layer {
  name: "loss_scene"
  type: "SoftmaxWithLoss"
  bottom: "scene_pred_all"
  bottom: "scene_label_all"
  top: "loss_scene"
}
layer {
  name: "loss_action"
  type: "SoftmaxWithLoss"
  bottom: "action_pred_clean"
  bottom: "label_action_clean"
  top: "loss_action"
}
layer {
  name: "loss_pose"
  type: "SoftmaxWithLoss"
  bottom: "fc8_CAD_pose"
  bottom: "label_pose"
  top: "loss_pose"
}
I0921 21:03:51.158516  5174 layer_factory.hpp:74] Creating layer data_action
I0921 21:03:51.158536  5174 net.cpp:84] Creating Layer data_action
I0921 21:03:51.158545  5174 net.cpp:342] data_action -> data_action
I0921 21:03:51.158581  5174 net.cpp:342] data_action -> label_action
I0921 21:03:51.158593  5174 net.cpp:113] Setting up data_action
I0921 21:03:51.166009  5174 db.cpp:34] Opened lmdb /cs/vml2/zhiweid/CVPR16_NEW/bp-rnn/experiments/0419_context/CAD_train_lmdb_0419_context
I0921 21:03:51.166558  5174 data_layer.cpp:67] output data size: 70,3,227,227
I0921 21:03:51.166597  5174 data_transformer.cpp:22] Loading mean file from: imagenet_mean.binaryproto
I0921 21:03:51.178836  5174 net.cpp:120] Top shape: 70 3 227 227 (10821090)
I0921 21:03:51.178859  5174 net.cpp:120] Top shape: 70 (70)
I0921 21:03:51.178869  5174 layer_factory.hpp:74] Creating layer label_action_data_action_1_split
I0921 21:03:51.178882  5174 net.cpp:84] Creating Layer label_action_data_action_1_split
I0921 21:03:51.178889  5174 net.cpp:384] label_action_data_action_1_split <- label_action
I0921 21:03:51.178902  5174 net.cpp:342] label_action_data_action_1_split -> label_action_data_action_1_split_0
I0921 21:03:51.178916  5174 net.cpp:342] label_action_data_action_1_split -> label_action_data_action_1_split_1
I0921 21:03:51.178925  5174 net.cpp:342] label_action_data_action_1_split -> label_action_data_action_1_split_2
I0921 21:03:51.178931  5174 net.cpp:342] label_action_data_action_1_split -> label_action_data_action_1_split_3
I0921 21:03:51.178938  5174 net.cpp:342] label_action_data_action_1_split -> label_action_data_action_1_split_4
I0921 21:03:51.178944  5174 net.cpp:113] Setting up label_action_data_action_1_split
I0921 21:03:51.178954  5174 net.cpp:120] Top shape: 70 (70)
I0921 21:03:51.178959  5174 net.cpp:120] Top shape: 70 (70)
I0921 21:03:51.178964  5174 net.cpp:120] Top shape: 70 (70)
I0921 21:03:51.178969  5174 net.cpp:120] Top shape: 70 (70)
I0921 21:03:51.178974  5174 net.cpp:120] Top shape: 70 (70)
I0921 21:03:51.178978  5174 layer_factory.hpp:74] Creating layer conv1_action
I0921 21:03:51.178992  5174 net.cpp:84] Creating Layer conv1_action
I0921 21:03:51.178995  5174 net.cpp:384] conv1_action <- data_action
I0921 21:03:51.179003  5174 net.cpp:342] conv1_action -> conv1_action
I0921 21:03:51.179013  5174 net.cpp:113] Setting up conv1_action
I0921 21:03:51.179522  5174 net.cpp:120] Top shape: 70 96 55 55 (20328000)
I0921 21:03:51.179539  5174 layer_factory.hpp:74] Creating layer relu1_action
I0921 21:03:51.179548  5174 net.cpp:84] Creating Layer relu1_action
I0921 21:03:51.179551  5174 net.cpp:384] relu1_action <- conv1_action
I0921 21:03:51.179558  5174 net.cpp:331] relu1_action -> conv1_action (in-place)
I0921 21:03:51.179563  5174 net.cpp:113] Setting up relu1_action
I0921 21:03:51.179569  5174 net.cpp:120] Top shape: 70 96 55 55 (20328000)
I0921 21:03:51.179574  5174 layer_factory.hpp:74] Creating layer pool1_action
I0921 21:03:51.179581  5174 net.cpp:84] Creating Layer pool1_action
I0921 21:03:51.179585  5174 net.cpp:384] pool1_action <- conv1_action
I0921 21:03:51.179591  5174 net.cpp:342] pool1_action -> pool1_action
I0921 21:03:51.179600  5174 net.cpp:113] Setting up pool1_action
I0921 21:03:51.179615  5174 net.cpp:120] Top shape: 70 96 27 27 (4898880)
I0921 21:03:51.179621  5174 layer_factory.hpp:74] Creating layer norm1_action
I0921 21:03:51.179631  5174 net.cpp:84] Creating Layer norm1_action
I0921 21:03:51.179636  5174 net.cpp:384] norm1_action <- pool1_action
I0921 21:03:51.179647  5174 net.cpp:342] norm1_action -> norm1_action
I0921 21:03:51.179678  5174 net.cpp:113] Setting up norm1_action
I0921 21:03:51.179687  5174 net.cpp:120] Top shape: 70 96 27 27 (4898880)
I0921 21:03:51.179694  5174 layer_factory.hpp:74] Creating layer conv2_action
I0921 21:03:51.179705  5174 net.cpp:84] Creating Layer conv2_action
I0921 21:03:51.179711  5174 net.cpp:384] conv2_action <- norm1_action
I0921 21:03:51.179719  5174 net.cpp:342] conv2_action -> conv2_action
I0921 21:03:51.179726  5174 net.cpp:113] Setting up conv2_action
I0921 21:03:51.183869  5174 net.cpp:120] Top shape: 70 256 27 27 (13063680)
I0921 21:03:51.183894  5174 layer_factory.hpp:74] Creating layer relu2_action
I0921 21:03:51.183904  5174 net.cpp:84] Creating Layer relu2_action
I0921 21:03:51.183909  5174 net.cpp:384] relu2_action <- conv2_action
I0921 21:03:51.183917  5174 net.cpp:331] relu2_action -> conv2_action (in-place)
I0921 21:03:51.183924  5174 net.cpp:113] Setting up relu2_action
I0921 21:03:51.183931  5174 net.cpp:120] Top shape: 70 256 27 27 (13063680)
I0921 21:03:51.183935  5174 layer_factory.hpp:74] Creating layer pool2_action
I0921 21:03:51.183948  5174 net.cpp:84] Creating Layer pool2_action
I0921 21:03:51.183953  5174 net.cpp:384] pool2_action <- conv2_action
I0921 21:03:51.183959  5174 net.cpp:342] pool2_action -> pool2_action
I0921 21:03:51.183966  5174 net.cpp:113] Setting up pool2_action
I0921 21:03:51.183975  5174 net.cpp:120] Top shape: 70 256 13 13 (3028480)
I0921 21:03:51.183979  5174 layer_factory.hpp:74] Creating layer norm2_action
I0921 21:03:51.183989  5174 net.cpp:84] Creating Layer norm2_action
I0921 21:03:51.183992  5174 net.cpp:384] norm2_action <- pool2_action
I0921 21:03:51.183998  5174 net.cpp:342] norm2_action -> norm2_action
I0921 21:03:51.184005  5174 net.cpp:113] Setting up norm2_action
I0921 21:03:51.184012  5174 net.cpp:120] Top shape: 70 256 13 13 (3028480)
I0921 21:03:51.184016  5174 layer_factory.hpp:74] Creating layer conv3_action
I0921 21:03:51.184026  5174 net.cpp:84] Creating Layer conv3_action
I0921 21:03:51.184031  5174 net.cpp:384] conv3_action <- norm2_action
I0921 21:03:51.184038  5174 net.cpp:342] conv3_action -> conv3_action
I0921 21:03:51.184046  5174 net.cpp:113] Setting up conv3_action
I0921 21:03:51.196470  5174 net.cpp:120] Top shape: 70 384 13 13 (4542720)
I0921 21:03:51.196502  5174 layer_factory.hpp:74] Creating layer relu3_action
I0921 21:03:51.196514  5174 net.cpp:84] Creating Layer relu3_action
I0921 21:03:51.196521  5174 net.cpp:384] relu3_action <- conv3_action
I0921 21:03:51.196529  5174 net.cpp:331] relu3_action -> conv3_action (in-place)
I0921 21:03:51.196538  5174 net.cpp:113] Setting up relu3_action
I0921 21:03:51.196544  5174 net.cpp:120] Top shape: 70 384 13 13 (4542720)
I0921 21:03:51.196548  5174 layer_factory.hpp:74] Creating layer conv4_action
I0921 21:03:51.196558  5174 net.cpp:84] Creating Layer conv4_action
I0921 21:03:51.196563  5174 net.cpp:384] conv4_action <- conv3_action
I0921 21:03:51.196573  5174 net.cpp:342] conv4_action -> conv4_action
I0921 21:03:51.196581  5174 net.cpp:113] Setting up conv4_action
I0921 21:03:51.205976  5174 net.cpp:120] Top shape: 70 384 13 13 (4542720)
I0921 21:03:51.206009  5174 layer_factory.hpp:74] Creating layer relu4_action
I0921 21:03:51.206024  5174 net.cpp:84] Creating Layer relu4_action
I0921 21:03:51.206030  5174 net.cpp:384] relu4_action <- conv4_action
I0921 21:03:51.206043  5174 net.cpp:331] relu4_action -> conv4_action (in-place)
I0921 21:03:51.206053  5174 net.cpp:113] Setting up relu4_action
I0921 21:03:51.206060  5174 net.cpp:120] Top shape: 70 384 13 13 (4542720)
I0921 21:03:51.206068  5174 layer_factory.hpp:74] Creating layer conv5_action
I0921 21:03:51.206089  5174 net.cpp:84] Creating Layer conv5_action
I0921 21:03:51.206094  5174 net.cpp:384] conv5_action <- conv4_action
I0921 21:03:51.206099  5174 net.cpp:342] conv5_action -> conv5_action
I0921 21:03:51.206111  5174 net.cpp:113] Setting up conv5_action
I0921 21:03:51.212347  5174 net.cpp:120] Top shape: 70 256 13 13 (3028480)
I0921 21:03:51.212383  5174 layer_factory.hpp:74] Creating layer relu5_action
I0921 21:03:51.212415  5174 net.cpp:84] Creating Layer relu5_action
I0921 21:03:51.212420  5174 net.cpp:384] relu5_action <- conv5_action
I0921 21:03:51.212430  5174 net.cpp:331] relu5_action -> conv5_action (in-place)
I0921 21:03:51.212438  5174 net.cpp:113] Setting up relu5_action
I0921 21:03:51.212445  5174 net.cpp:120] Top shape: 70 256 13 13 (3028480)
I0921 21:03:51.212448  5174 layer_factory.hpp:74] Creating layer pool5_action
I0921 21:03:51.212460  5174 net.cpp:84] Creating Layer pool5_action
I0921 21:03:51.212466  5174 net.cpp:384] pool5_action <- conv5_action
I0921 21:03:51.212471  5174 net.cpp:342] pool5_action -> pool5_action
I0921 21:03:51.212486  5174 net.cpp:113] Setting up pool5_action
I0921 21:03:51.212496  5174 net.cpp:120] Top shape: 70 256 6 6 (645120)
I0921 21:03:51.212499  5174 layer_factory.hpp:74] Creating layer fc6_action
I0921 21:03:51.212510  5174 net.cpp:84] Creating Layer fc6_action
I0921 21:03:51.212514  5174 net.cpp:384] fc6_action <- pool5_action
I0921 21:03:51.212522  5174 net.cpp:342] fc6_action -> fc6_action
I0921 21:03:51.212532  5174 net.cpp:113] Setting up fc6_action
I0921 21:03:51.715687  5174 net.cpp:120] Top shape: 70 4096 (286720)
I0921 21:03:51.715715  5174 layer_factory.hpp:74] Creating layer relu6_action
I0921 21:03:51.715726  5174 net.cpp:84] Creating Layer relu6_action
I0921 21:03:51.715731  5174 net.cpp:384] relu6_action <- fc6_action
I0921 21:03:51.715739  5174 net.cpp:331] relu6_action -> fc6_action (in-place)
I0921 21:03:51.715749  5174 net.cpp:113] Setting up relu6_action
I0921 21:03:51.715754  5174 net.cpp:120] Top shape: 70 4096 (286720)
I0921 21:03:51.715759  5174 layer_factory.hpp:74] Creating layer drop6_action
I0921 21:03:51.715770  5174 net.cpp:84] Creating Layer drop6_action
I0921 21:03:51.715775  5174 net.cpp:384] drop6_action <- fc6_action
I0921 21:03:51.715780  5174 net.cpp:331] drop6_action -> fc6_action (in-place)
I0921 21:03:51.715787  5174 net.cpp:113] Setting up drop6_action
I0921 21:03:51.715797  5174 net.cpp:120] Top shape: 70 4096 (286720)
I0921 21:03:51.715802  5174 layer_factory.hpp:74] Creating layer fc7_action
I0921 21:03:51.715812  5174 net.cpp:84] Creating Layer fc7_action
I0921 21:03:51.715817  5174 net.cpp:384] fc7_action <- fc6_action
I0921 21:03:51.715823  5174 net.cpp:342] fc7_action -> fc7_action
I0921 21:03:51.715831  5174 net.cpp:113] Setting up fc7_action
I0921 21:03:51.938434  5174 net.cpp:120] Top shape: 70 4096 (286720)
I0921 21:03:51.938464  5174 layer_factory.hpp:74] Creating layer relu7_action
I0921 21:03:51.938480  5174 net.cpp:84] Creating Layer relu7_action
I0921 21:03:51.938487  5174 net.cpp:384] relu7_action <- fc7_action
I0921 21:03:51.938494  5174 net.cpp:331] relu7_action -> fc7_action (in-place)
I0921 21:03:51.938503  5174 net.cpp:113] Setting up relu7_action
I0921 21:03:51.938508  5174 net.cpp:120] Top shape: 70 4096 (286720)
I0921 21:03:51.938513  5174 layer_factory.hpp:74] Creating layer drop7_action
I0921 21:03:51.938520  5174 net.cpp:84] Creating Layer drop7_action
I0921 21:03:51.938525  5174 net.cpp:384] drop7_action <- fc7_action
I0921 21:03:51.938532  5174 net.cpp:331] drop7_action -> fc7_action (in-place)
I0921 21:03:51.938539  5174 net.cpp:113] Setting up drop7_action
I0921 21:03:51.938546  5174 net.cpp:120] Top shape: 70 4096 (286720)
I0921 21:03:51.938550  5174 layer_factory.hpp:74] Creating layer fc8_CAD_action
I0921 21:03:51.938560  5174 net.cpp:84] Creating Layer fc8_CAD_action
I0921 21:03:51.938565  5174 net.cpp:384] fc8_CAD_action <- fc7_action
I0921 21:03:51.938570  5174 net.cpp:342] fc8_CAD_action -> fc8_CAD_action_unnorm
I0921 21:03:51.938580  5174 net.cpp:113] Setting up fc8_CAD_action
I0921 21:03:51.938985  5174 net.cpp:120] Top shape: 70 7 (490)
I0921 21:03:51.938995  5174 layer_factory.hpp:74] Creating layer prob_action_cad
I0921 21:03:51.939003  5174 net.cpp:84] Creating Layer prob_action_cad
I0921 21:03:51.939008  5174 net.cpp:384] prob_action_cad <- fc8_CAD_action_unnorm
I0921 21:03:51.939014  5174 net.cpp:342] prob_action_cad -> fc8_CAD_action
I0921 21:03:51.939049  5174 net.cpp:113] Setting up prob_action_cad
I0921 21:03:51.939059  5174 net.cpp:120] Top shape: 70 7 (490)
I0921 21:03:51.939064  5174 layer_factory.hpp:74] Creating layer fc8_CAD_action_prob_action_cad_0_split
I0921 21:03:51.939070  5174 net.cpp:84] Creating Layer fc8_CAD_action_prob_action_cad_0_split
I0921 21:03:51.939074  5174 net.cpp:384] fc8_CAD_action_prob_action_cad_0_split <- fc8_CAD_action
I0921 21:03:51.939080  5174 net.cpp:342] fc8_CAD_action_prob_action_cad_0_split -> fc8_CAD_action_prob_action_cad_0_split_0
I0921 21:03:51.939086  5174 net.cpp:342] fc8_CAD_action_prob_action_cad_0_split -> fc8_CAD_action_prob_action_cad_0_split_1
I0921 21:03:51.939092  5174 net.cpp:113] Setting up fc8_CAD_action_prob_action_cad_0_split
I0921 21:03:51.939100  5174 net.cpp:120] Top shape: 70 7 (490)
I0921 21:03:51.939105  5174 net.cpp:120] Top shape: 70 7 (490)
I0921 21:03:51.939108  5174 layer_factory.hpp:74] Creating layer data_pose
I0921 21:03:51.939121  5174 net.cpp:84] Creating Layer data_pose
I0921 21:03:51.939127  5174 net.cpp:342] data_pose -> data_pose
I0921 21:03:51.939136  5174 net.cpp:342] data_pose -> label_pose
I0921 21:03:51.939143  5174 net.cpp:113] Setting up data_pose
I0921 21:03:51.942889  5174 db.cpp:34] Opened lmdb /cs/vml2/zhiweid/CVPR16_NEW/bp-rnn/experiments/0419_context/CAD_train_lmdb_0419_context
I0921 21:03:51.943265  5174 data_layer.cpp:67] output data size: 70,3,227,227
I0921 21:03:51.943277  5174 data_transformer.cpp:22] Loading mean file from: imagenet_mean.binaryproto
I0921 21:03:51.952311  5174 net.cpp:120] Top shape: 70 3 227 227 (10821090)
I0921 21:03:51.952328  5174 net.cpp:120] Top shape: 70 (70)
I0921 21:03:51.952333  5174 layer_factory.hpp:74] Creating layer conv1_pose
I0921 21:03:51.952347  5174 net.cpp:84] Creating Layer conv1_pose
I0921 21:03:51.952365  5174 net.cpp:384] conv1_pose <- data_pose
I0921 21:03:51.952375  5174 net.cpp:342] conv1_pose -> conv1_pose
I0921 21:03:51.952386  5174 net.cpp:113] Setting up conv1_pose
I0921 21:03:51.952852  5174 net.cpp:120] Top shape: 70 96 55 55 (20328000)
I0921 21:03:51.952867  5174 layer_factory.hpp:74] Creating layer relu1_pose
I0921 21:03:51.952874  5174 net.cpp:84] Creating Layer relu1_pose
I0921 21:03:51.952878  5174 net.cpp:384] relu1_pose <- conv1_pose
I0921 21:03:51.952884  5174 net.cpp:331] relu1_pose -> conv1_pose (in-place)
I0921 21:03:51.952890  5174 net.cpp:113] Setting up relu1_pose
I0921 21:03:51.952896  5174 net.cpp:120] Top shape: 70 96 55 55 (20328000)
I0921 21:03:51.952901  5174 layer_factory.hpp:74] Creating layer pool1_pose
I0921 21:03:51.952908  5174 net.cpp:84] Creating Layer pool1_pose
I0921 21:03:51.952913  5174 net.cpp:384] pool1_pose <- conv1_pose
I0921 21:03:51.952919  5174 net.cpp:342] pool1_pose -> pool1_pose
I0921 21:03:51.952925  5174 net.cpp:113] Setting up pool1_pose
I0921 21:03:51.952934  5174 net.cpp:120] Top shape: 70 96 27 27 (4898880)
I0921 21:03:51.952939  5174 layer_factory.hpp:74] Creating layer norm1_pose
I0921 21:03:51.952945  5174 net.cpp:84] Creating Layer norm1_pose
I0921 21:03:51.952950  5174 net.cpp:384] norm1_pose <- pool1_pose
I0921 21:03:51.952955  5174 net.cpp:342] norm1_pose -> norm1_pose
I0921 21:03:51.952961  5174 net.cpp:113] Setting up norm1_pose
I0921 21:03:51.952968  5174 net.cpp:120] Top shape: 70 96 27 27 (4898880)
I0921 21:03:51.952973  5174 layer_factory.hpp:74] Creating layer conv2_pose
I0921 21:03:51.952980  5174 net.cpp:84] Creating Layer conv2_pose
I0921 21:03:51.952985  5174 net.cpp:384] conv2_pose <- norm1_pose
I0921 21:03:51.952991  5174 net.cpp:342] conv2_pose -> conv2_pose
I0921 21:03:51.952998  5174 net.cpp:113] Setting up conv2_pose
I0921 21:03:51.957034  5174 net.cpp:120] Top shape: 70 256 27 27 (13063680)
I0921 21:03:51.957056  5174 layer_factory.hpp:74] Creating layer relu2_pose
I0921 21:03:51.957072  5174 net.cpp:84] Creating Layer relu2_pose
I0921 21:03:51.957077  5174 net.cpp:384] relu2_pose <- conv2_pose
I0921 21:03:51.957085  5174 net.cpp:331] relu2_pose -> conv2_pose (in-place)
I0921 21:03:51.957098  5174 net.cpp:113] Setting up relu2_pose
I0921 21:03:51.957129  5174 net.cpp:120] Top shape: 70 256 27 27 (13063680)
I0921 21:03:51.957134  5174 layer_factory.hpp:74] Creating layer pool2_pose
I0921 21:03:51.957141  5174 net.cpp:84] Creating Layer pool2_pose
I0921 21:03:51.957145  5174 net.cpp:384] pool2_pose <- conv2_pose
I0921 21:03:51.957154  5174 net.cpp:342] pool2_pose -> pool2_pose
I0921 21:03:51.957161  5174 net.cpp:113] Setting up pool2_pose
I0921 21:03:51.957170  5174 net.cpp:120] Top shape: 70 256 13 13 (3028480)
I0921 21:03:51.957175  5174 layer_factory.hpp:74] Creating layer norm2_pose
I0921 21:03:51.957183  5174 net.cpp:84] Creating Layer norm2_pose
I0921 21:03:51.957188  5174 net.cpp:384] norm2_pose <- pool2_pose
I0921 21:03:51.957193  5174 net.cpp:342] norm2_pose -> norm2_pose
I0921 21:03:51.957201  5174 net.cpp:113] Setting up norm2_pose
I0921 21:03:51.957207  5174 net.cpp:120] Top shape: 70 256 13 13 (3028480)
I0921 21:03:51.957212  5174 layer_factory.hpp:74] Creating layer conv3_pose
I0921 21:03:51.957221  5174 net.cpp:84] Creating Layer conv3_pose
I0921 21:03:51.957224  5174 net.cpp:384] conv3_pose <- norm2_pose
I0921 21:03:51.957232  5174 net.cpp:342] conv3_pose -> conv3_pose
I0921 21:03:51.957239  5174 net.cpp:113] Setting up conv3_pose
I0921 21:03:51.969447  5174 net.cpp:120] Top shape: 70 384 13 13 (4542720)
I0921 21:03:51.969472  5174 layer_factory.hpp:74] Creating layer relu3_pose
I0921 21:03:51.969488  5174 net.cpp:84] Creating Layer relu3_pose
I0921 21:03:51.969494  5174 net.cpp:384] relu3_pose <- conv3_pose
I0921 21:03:51.969502  5174 net.cpp:331] relu3_pose -> conv3_pose (in-place)
I0921 21:03:51.969511  5174 net.cpp:113] Setting up relu3_pose
I0921 21:03:51.969517  5174 net.cpp:120] Top shape: 70 384 13 13 (4542720)
I0921 21:03:51.969521  5174 layer_factory.hpp:74] Creating layer conv4_pose
I0921 21:03:51.969532  5174 net.cpp:84] Creating Layer conv4_pose
I0921 21:03:51.969537  5174 net.cpp:384] conv4_pose <- conv3_pose
I0921 21:03:51.969543  5174 net.cpp:342] conv4_pose -> conv4_pose
I0921 21:03:51.969558  5174 net.cpp:113] Setting up conv4_pose
I0921 21:03:51.978780  5174 net.cpp:120] Top shape: 70 384 13 13 (4542720)
I0921 21:03:51.978806  5174 layer_factory.hpp:74] Creating layer relu4_pose
I0921 21:03:51.978822  5174 net.cpp:84] Creating Layer relu4_pose
I0921 21:03:51.978828  5174 net.cpp:384] relu4_pose <- conv4_pose
I0921 21:03:51.978837  5174 net.cpp:331] relu4_pose -> conv4_pose (in-place)
I0921 21:03:51.978845  5174 net.cpp:113] Setting up relu4_pose
I0921 21:03:51.978852  5174 net.cpp:120] Top shape: 70 384 13 13 (4542720)
I0921 21:03:51.978857  5174 layer_factory.hpp:74] Creating layer conv5_pose
I0921 21:03:51.978866  5174 net.cpp:84] Creating Layer conv5_pose
I0921 21:03:51.978871  5174 net.cpp:384] conv5_pose <- conv4_pose
I0921 21:03:51.978878  5174 net.cpp:342] conv5_pose -> conv5_pose
I0921 21:03:51.978884  5174 net.cpp:113] Setting up conv5_pose
I0921 21:03:51.985029  5174 net.cpp:120] Top shape: 70 256 13 13 (3028480)
I0921 21:03:51.985055  5174 layer_factory.hpp:74] Creating layer relu5_pose
I0921 21:03:51.985066  5174 net.cpp:84] Creating Layer relu5_pose
I0921 21:03:51.985072  5174 net.cpp:384] relu5_pose <- conv5_pose
I0921 21:03:51.985080  5174 net.cpp:331] relu5_pose -> conv5_pose (in-place)
I0921 21:03:51.985088  5174 net.cpp:113] Setting up relu5_pose
I0921 21:03:51.985095  5174 net.cpp:120] Top shape: 70 256 13 13 (3028480)
I0921 21:03:51.985100  5174 layer_factory.hpp:74] Creating layer pool5_pose
I0921 21:03:51.985106  5174 net.cpp:84] Creating Layer pool5_pose
I0921 21:03:51.985110  5174 net.cpp:384] pool5_pose <- conv5_pose
I0921 21:03:51.985118  5174 net.cpp:342] pool5_pose -> pool5_pose
I0921 21:03:51.985127  5174 net.cpp:113] Setting up pool5_pose
I0921 21:03:51.985139  5174 net.cpp:120] Top shape: 70 256 6 6 (645120)
I0921 21:03:51.985143  5174 layer_factory.hpp:74] Creating layer fc6_pose
I0921 21:03:51.985152  5174 net.cpp:84] Creating Layer fc6_pose
I0921 21:03:51.985157  5174 net.cpp:384] fc6_pose <- pool5_pose
I0921 21:03:51.985163  5174 net.cpp:342] fc6_pose -> fc6_pose
I0921 21:03:51.985174  5174 net.cpp:113] Setting up fc6_pose
I0921 21:03:52.488229  5174 net.cpp:120] Top shape: 70 4096 (286720)
I0921 21:03:52.488260  5174 layer_factory.hpp:74] Creating layer relu6_pose
I0921 21:03:52.488271  5174 net.cpp:84] Creating Layer relu6_pose
I0921 21:03:52.488277  5174 net.cpp:384] relu6_pose <- fc6_pose
I0921 21:03:52.488286  5174 net.cpp:331] relu6_pose -> fc6_pose (in-place)
I0921 21:03:52.488294  5174 net.cpp:113] Setting up relu6_pose
I0921 21:03:52.488301  5174 net.cpp:120] Top shape: 70 4096 (286720)
I0921 21:03:52.488306  5174 layer_factory.hpp:74] Creating layer drop6_pose
I0921 21:03:52.488312  5174 net.cpp:84] Creating Layer drop6_pose
I0921 21:03:52.488317  5174 net.cpp:384] drop6_pose <- fc6_pose
I0921 21:03:52.488322  5174 net.cpp:331] drop6_pose -> fc6_pose (in-place)
I0921 21:03:52.488328  5174 net.cpp:113] Setting up drop6_pose
I0921 21:03:52.488335  5174 net.cpp:120] Top shape: 70 4096 (286720)
I0921 21:03:52.488340  5174 layer_factory.hpp:74] Creating layer fc7_pose
I0921 21:03:52.488348  5174 net.cpp:84] Creating Layer fc7_pose
I0921 21:03:52.488353  5174 net.cpp:384] fc7_pose <- fc6_pose
I0921 21:03:52.488363  5174 net.cpp:342] fc7_pose -> fc7_pose
I0921 21:03:52.488370  5174 net.cpp:113] Setting up fc7_pose
I0921 21:03:52.710681  5174 net.cpp:120] Top shape: 70 4096 (286720)
I0921 21:03:52.710712  5174 layer_factory.hpp:74] Creating layer relu7_pose
I0921 21:03:52.710726  5174 net.cpp:84] Creating Layer relu7_pose
I0921 21:03:52.710731  5174 net.cpp:384] relu7_pose <- fc7_pose
I0921 21:03:52.710739  5174 net.cpp:331] relu7_pose -> fc7_pose (in-place)
I0921 21:03:52.710747  5174 net.cpp:113] Setting up relu7_pose
I0921 21:03:52.710754  5174 net.cpp:120] Top shape: 70 4096 (286720)
I0921 21:03:52.710758  5174 layer_factory.hpp:74] Creating layer drop7_pose
I0921 21:03:52.710767  5174 net.cpp:84] Creating Layer drop7_pose
I0921 21:03:52.710770  5174 net.cpp:384] drop7_pose <- fc7_pose
I0921 21:03:52.710775  5174 net.cpp:331] drop7_pose -> fc7_pose (in-place)
I0921 21:03:52.710782  5174 net.cpp:113] Setting up drop7_pose
I0921 21:03:52.710789  5174 net.cpp:120] Top shape: 70 4096 (286720)
I0921 21:03:52.710793  5174 layer_factory.hpp:74] Creating layer fc8_CAD_pose
I0921 21:03:52.710803  5174 net.cpp:84] Creating Layer fc8_CAD_pose
I0921 21:03:52.710808  5174 net.cpp:384] fc8_CAD_pose <- fc7_pose
I0921 21:03:52.710813  5174 net.cpp:342] fc8_CAD_pose -> fc8_CAD_pose
I0921 21:03:52.710822  5174 net.cpp:113] Setting up fc8_CAD_pose
I0921 21:03:52.711278  5174 net.cpp:120] Top shape: 70 8 (560)
I0921 21:03:52.711288  5174 layer_factory.hpp:74] Creating layer fc8_CAD_pose_fc8_CAD_pose_0_split
I0921 21:03:52.711297  5174 net.cpp:84] Creating Layer fc8_CAD_pose_fc8_CAD_pose_0_split
I0921 21:03:52.711300  5174 net.cpp:384] fc8_CAD_pose_fc8_CAD_pose_0_split <- fc8_CAD_pose
I0921 21:03:52.711308  5174 net.cpp:342] fc8_CAD_pose_fc8_CAD_pose_0_split -> fc8_CAD_pose_fc8_CAD_pose_0_split_0
I0921 21:03:52.711315  5174 net.cpp:342] fc8_CAD_pose_fc8_CAD_pose_0_split -> fc8_CAD_pose_fc8_CAD_pose_0_split_1
I0921 21:03:52.711323  5174 net.cpp:113] Setting up fc8_CAD_pose_fc8_CAD_pose_0_split
I0921 21:03:52.711329  5174 net.cpp:120] Top shape: 70 8 (560)
I0921 21:03:52.711334  5174 net.cpp:120] Top shape: 70 8 (560)
I0921 21:03:52.711338  5174 layer_factory.hpp:74] Creating layer data_frame
I0921 21:03:52.711349  5174 net.cpp:84] Creating Layer data_frame
I0921 21:03:52.711356  5174 net.cpp:342] data_frame -> data_frame
I0921 21:03:52.711365  5174 net.cpp:342] data_frame -> label_frame
I0921 21:03:52.711380  5174 net.cpp:113] Setting up data_frame
I0921 21:03:52.714658  5174 db.cpp:34] Opened lmdb /cs/vml2/zhiweid/CVPR16_NEW/bp-rnn/experiments/0419_context/CAD_train_lmdb_0419_frame_context
I0921 21:03:52.715112  5174 data_layer.cpp:67] output data size: 5,3,227,227
I0921 21:03:52.715124  5174 data_transformer.cpp:22] Loading mean file from: imagenet_mean.binaryproto
I0921 21:03:52.717396  5174 net.cpp:120] Top shape: 5 3 227 227 (772935)
I0921 21:03:52.717409  5174 net.cpp:120] Top shape: 5 (5)
I0921 21:03:52.717417  5174 layer_factory.hpp:74] Creating layer label_frame_data_frame_1_split
I0921 21:03:52.717447  5174 net.cpp:84] Creating Layer label_frame_data_frame_1_split
I0921 21:03:52.717452  5174 net.cpp:384] label_frame_data_frame_1_split <- label_frame
I0921 21:03:52.717459  5174 net.cpp:342] label_frame_data_frame_1_split -> label_frame_data_frame_1_split_0
I0921 21:03:52.717468  5174 net.cpp:342] label_frame_data_frame_1_split -> label_frame_data_frame_1_split_1
I0921 21:03:52.717474  5174 net.cpp:113] Setting up label_frame_data_frame_1_split
I0921 21:03:52.717489  5174 net.cpp:120] Top shape: 5 (5)
I0921 21:03:52.717494  5174 net.cpp:120] Top shape: 5 (5)
I0921 21:03:52.717497  5174 layer_factory.hpp:74] Creating layer conv1_frame
I0921 21:03:52.717507  5174 net.cpp:84] Creating Layer conv1_frame
I0921 21:03:52.717511  5174 net.cpp:384] conv1_frame <- data_frame
I0921 21:03:52.717519  5174 net.cpp:342] conv1_frame -> conv1_frame
I0921 21:03:52.717526  5174 net.cpp:113] Setting up conv1_frame
I0921 21:03:52.717994  5174 net.cpp:120] Top shape: 5 96 55 55 (1452000)
I0921 21:03:52.718010  5174 layer_factory.hpp:74] Creating layer relu1_frame
I0921 21:03:52.718019  5174 net.cpp:84] Creating Layer relu1_frame
I0921 21:03:52.718022  5174 net.cpp:384] relu1_frame <- conv1_frame
I0921 21:03:52.718029  5174 net.cpp:331] relu1_frame -> conv1_frame (in-place)
I0921 21:03:52.718034  5174 net.cpp:113] Setting up relu1_frame
I0921 21:03:52.718040  5174 net.cpp:120] Top shape: 5 96 55 55 (1452000)
I0921 21:03:52.718044  5174 layer_factory.hpp:74] Creating layer pool1_frame
I0921 21:03:52.718051  5174 net.cpp:84] Creating Layer pool1_frame
I0921 21:03:52.718055  5174 net.cpp:384] pool1_frame <- conv1_frame
I0921 21:03:52.718061  5174 net.cpp:342] pool1_frame -> pool1_frame
I0921 21:03:52.718068  5174 net.cpp:113] Setting up pool1_frame
I0921 21:03:52.718077  5174 net.cpp:120] Top shape: 5 96 27 27 (349920)
I0921 21:03:52.718081  5174 layer_factory.hpp:74] Creating layer norm1_frame
I0921 21:03:52.718088  5174 net.cpp:84] Creating Layer norm1_frame
I0921 21:03:52.718092  5174 net.cpp:384] norm1_frame <- pool1_frame
I0921 21:03:52.718098  5174 net.cpp:342] norm1_frame -> norm1_frame
I0921 21:03:52.718107  5174 net.cpp:113] Setting up norm1_frame
I0921 21:03:52.718116  5174 net.cpp:120] Top shape: 5 96 27 27 (349920)
I0921 21:03:52.718121  5174 layer_factory.hpp:74] Creating layer conv2_frame
I0921 21:03:52.718127  5174 net.cpp:84] Creating Layer conv2_frame
I0921 21:03:52.718132  5174 net.cpp:384] conv2_frame <- norm1_frame
I0921 21:03:52.718137  5174 net.cpp:342] conv2_frame -> conv2_frame
I0921 21:03:52.718144  5174 net.cpp:113] Setting up conv2_frame
I0921 21:03:52.722223  5174 net.cpp:120] Top shape: 5 256 27 27 (933120)
I0921 21:03:52.722245  5174 layer_factory.hpp:74] Creating layer relu2_frame
I0921 21:03:52.722257  5174 net.cpp:84] Creating Layer relu2_frame
I0921 21:03:52.722264  5174 net.cpp:384] relu2_frame <- conv2_frame
I0921 21:03:52.722271  5174 net.cpp:331] relu2_frame -> conv2_frame (in-place)
I0921 21:03:52.722280  5174 net.cpp:113] Setting up relu2_frame
I0921 21:03:52.722285  5174 net.cpp:120] Top shape: 5 256 27 27 (933120)
I0921 21:03:52.722290  5174 layer_factory.hpp:74] Creating layer pool2_frame
I0921 21:03:52.722298  5174 net.cpp:84] Creating Layer pool2_frame
I0921 21:03:52.722302  5174 net.cpp:384] pool2_frame <- conv2_frame
I0921 21:03:52.722309  5174 net.cpp:342] pool2_frame -> pool2_frame
I0921 21:03:52.722318  5174 net.cpp:113] Setting up pool2_frame
I0921 21:03:52.722326  5174 net.cpp:120] Top shape: 5 256 13 13 (216320)
I0921 21:03:52.722333  5174 layer_factory.hpp:74] Creating layer norm2_frame
I0921 21:03:52.722342  5174 net.cpp:84] Creating Layer norm2_frame
I0921 21:03:52.722347  5174 net.cpp:384] norm2_frame <- pool2_frame
I0921 21:03:52.722353  5174 net.cpp:342] norm2_frame -> norm2_frame
I0921 21:03:52.722360  5174 net.cpp:113] Setting up norm2_frame
I0921 21:03:52.722368  5174 net.cpp:120] Top shape: 5 256 13 13 (216320)
I0921 21:03:52.722371  5174 layer_factory.hpp:74] Creating layer conv3_frame
I0921 21:03:52.722407  5174 net.cpp:84] Creating Layer conv3_frame
I0921 21:03:52.722412  5174 net.cpp:384] conv3_frame <- norm2_frame
I0921 21:03:52.722419  5174 net.cpp:342] conv3_frame -> conv3_frame
I0921 21:03:52.722426  5174 net.cpp:113] Setting up conv3_frame
I0921 21:03:52.734822  5174 net.cpp:120] Top shape: 5 384 13 13 (324480)
I0921 21:03:52.734844  5174 layer_factory.hpp:74] Creating layer relu3_frame
I0921 21:03:52.734853  5174 net.cpp:84] Creating Layer relu3_frame
I0921 21:03:52.734860  5174 net.cpp:384] relu3_frame <- conv3_frame
I0921 21:03:52.734868  5174 net.cpp:331] relu3_frame -> conv3_frame (in-place)
I0921 21:03:52.734875  5174 net.cpp:113] Setting up relu3_frame
I0921 21:03:52.734881  5174 net.cpp:120] Top shape: 5 384 13 13 (324480)
I0921 21:03:52.734885  5174 layer_factory.hpp:74] Creating layer conv4_frame
I0921 21:03:52.734897  5174 net.cpp:84] Creating Layer conv4_frame
I0921 21:03:52.734901  5174 net.cpp:384] conv4_frame <- conv3_frame
I0921 21:03:52.734910  5174 net.cpp:342] conv4_frame -> conv4_frame
I0921 21:03:52.734917  5174 net.cpp:113] Setting up conv4_frame
I0921 21:03:52.743753  5174 net.cpp:120] Top shape: 5 384 13 13 (324480)
I0921 21:03:52.743767  5174 layer_factory.hpp:74] Creating layer relu4_frame
I0921 21:03:52.743773  5174 net.cpp:84] Creating Layer relu4_frame
I0921 21:03:52.743778  5174 net.cpp:384] relu4_frame <- conv4_frame
I0921 21:03:52.743785  5174 net.cpp:331] relu4_frame -> conv4_frame (in-place)
I0921 21:03:52.743793  5174 net.cpp:113] Setting up relu4_frame
I0921 21:03:52.743798  5174 net.cpp:120] Top shape: 5 384 13 13 (324480)
I0921 21:03:52.743803  5174 layer_factory.hpp:74] Creating layer conv5_frame
I0921 21:03:52.743819  5174 net.cpp:84] Creating Layer conv5_frame
I0921 21:03:52.743824  5174 net.cpp:384] conv5_frame <- conv4_frame
I0921 21:03:52.743834  5174 net.cpp:342] conv5_frame -> conv5_frame
I0921 21:03:52.743840  5174 net.cpp:113] Setting up conv5_frame
I0921 21:03:52.749934  5174 net.cpp:120] Top shape: 5 256 13 13 (216320)
I0921 21:03:52.749948  5174 layer_factory.hpp:74] Creating layer relu5_frame
I0921 21:03:52.749954  5174 net.cpp:84] Creating Layer relu5_frame
I0921 21:03:52.749958  5174 net.cpp:384] relu5_frame <- conv5_frame
I0921 21:03:52.749964  5174 net.cpp:331] relu5_frame -> conv5_frame (in-place)
I0921 21:03:52.749970  5174 net.cpp:113] Setting up relu5_frame
I0921 21:03:52.749976  5174 net.cpp:120] Top shape: 5 256 13 13 (216320)
I0921 21:03:52.749980  5174 layer_factory.hpp:74] Creating layer pool5_frame
I0921 21:03:52.749987  5174 net.cpp:84] Creating Layer pool5_frame
I0921 21:03:52.749992  5174 net.cpp:384] pool5_frame <- conv5_frame
I0921 21:03:52.749999  5174 net.cpp:342] pool5_frame -> pool5_frame
I0921 21:03:52.750006  5174 net.cpp:113] Setting up pool5_frame
I0921 21:03:52.750015  5174 net.cpp:120] Top shape: 5 256 6 6 (46080)
I0921 21:03:52.750018  5174 layer_factory.hpp:74] Creating layer fc6_frame
I0921 21:03:52.750028  5174 net.cpp:84] Creating Layer fc6_frame
I0921 21:03:52.750033  5174 net.cpp:384] fc6_frame <- pool5_frame
I0921 21:03:52.750039  5174 net.cpp:342] fc6_frame -> fc6_frame
I0921 21:03:52.750046  5174 net.cpp:113] Setting up fc6_frame
I0921 21:03:53.249352  5174 net.cpp:120] Top shape: 5 4096 (20480)
I0921 21:03:53.249382  5174 layer_factory.hpp:74] Creating layer relu6_frame
I0921 21:03:53.249394  5174 net.cpp:84] Creating Layer relu6_frame
I0921 21:03:53.249400  5174 net.cpp:384] relu6_frame <- fc6_frame
I0921 21:03:53.249408  5174 net.cpp:331] relu6_frame -> fc6_frame (in-place)
I0921 21:03:53.249418  5174 net.cpp:113] Setting up relu6_frame
I0921 21:03:53.249424  5174 net.cpp:120] Top shape: 5 4096 (20480)
I0921 21:03:53.249428  5174 layer_factory.hpp:74] Creating layer drop6_frame
I0921 21:03:53.249439  5174 net.cpp:84] Creating Layer drop6_frame
I0921 21:03:53.249442  5174 net.cpp:384] drop6_frame <- fc6_frame
I0921 21:03:53.249449  5174 net.cpp:331] drop6_frame -> fc6_frame (in-place)
I0921 21:03:53.249454  5174 net.cpp:113] Setting up drop6_frame
I0921 21:03:53.249466  5174 net.cpp:120] Top shape: 5 4096 (20480)
I0921 21:03:53.249497  5174 layer_factory.hpp:74] Creating layer fc7_frame
I0921 21:03:53.249506  5174 net.cpp:84] Creating Layer fc7_frame
I0921 21:03:53.249511  5174 net.cpp:384] fc7_frame <- fc6_frame
I0921 21:03:53.249519  5174 net.cpp:342] fc7_frame -> fc7_frame
I0921 21:03:53.249528  5174 net.cpp:113] Setting up fc7_frame
I0921 21:03:53.472235  5174 net.cpp:120] Top shape: 5 4096 (20480)
I0921 21:03:53.472265  5174 layer_factory.hpp:74] Creating layer relu7_frame
I0921 21:03:53.472280  5174 net.cpp:84] Creating Layer relu7_frame
I0921 21:03:53.472286  5174 net.cpp:384] relu7_frame <- fc7_frame
I0921 21:03:53.472295  5174 net.cpp:331] relu7_frame -> fc7_frame (in-place)
I0921 21:03:53.472303  5174 net.cpp:113] Setting up relu7_frame
I0921 21:03:53.472311  5174 net.cpp:120] Top shape: 5 4096 (20480)
I0921 21:03:53.472314  5174 layer_factory.hpp:74] Creating layer drop7_frame
I0921 21:03:53.472321  5174 net.cpp:84] Creating Layer drop7_frame
I0921 21:03:53.472326  5174 net.cpp:384] drop7_frame <- fc7_frame
I0921 21:03:53.472332  5174 net.cpp:331] drop7_frame -> fc7_frame (in-place)
I0921 21:03:53.472339  5174 net.cpp:113] Setting up drop7_frame
I0921 21:03:53.472347  5174 net.cpp:120] Top shape: 5 4096 (20480)
I0921 21:03:53.472352  5174 layer_factory.hpp:74] Creating layer fc8_CAD_frame
I0921 21:03:53.472359  5174 net.cpp:84] Creating Layer fc8_CAD_frame
I0921 21:03:53.472363  5174 net.cpp:384] fc8_CAD_frame <- fc7_frame
I0921 21:03:53.472371  5174 net.cpp:342] fc8_CAD_frame -> fc8_CAD_frame
I0921 21:03:53.472380  5174 net.cpp:113] Setting up fc8_CAD_frame
I0921 21:03:53.472678  5174 net.cpp:120] Top shape: 5 5 (25)
I0921 21:03:53.472687  5174 layer_factory.hpp:74] Creating layer fc8_CAD_frame_fc8_CAD_frame_0_split
I0921 21:03:53.472697  5174 net.cpp:84] Creating Layer fc8_CAD_frame_fc8_CAD_frame_0_split
I0921 21:03:53.472702  5174 net.cpp:384] fc8_CAD_frame_fc8_CAD_frame_0_split <- fc8_CAD_frame
I0921 21:03:53.472707  5174 net.cpp:342] fc8_CAD_frame_fc8_CAD_frame_0_split -> fc8_CAD_frame_fc8_CAD_frame_0_split_0
I0921 21:03:53.472715  5174 net.cpp:342] fc8_CAD_frame_fc8_CAD_frame_0_split -> fc8_CAD_frame_fc8_CAD_frame_0_split_1
I0921 21:03:53.472723  5174 net.cpp:342] fc8_CAD_frame_fc8_CAD_frame_0_split -> fc8_CAD_frame_fc8_CAD_frame_0_split_2
I0921 21:03:53.472729  5174 net.cpp:113] Setting up fc8_CAD_frame_fc8_CAD_frame_0_split
I0921 21:03:53.472736  5174 net.cpp:120] Top shape: 5 5 (25)
I0921 21:03:53.472741  5174 net.cpp:120] Top shape: 5 5 (25)
I0921 21:03:53.472746  5174 net.cpp:120] Top shape: 5 5 (25)
I0921 21:03:53.472750  5174 layer_factory.hpp:74] Creating layer prob_frame
I0921 21:03:53.472756  5174 net.cpp:84] Creating Layer prob_frame
I0921 21:03:53.472760  5174 net.cpp:384] prob_frame <- fc8_CAD_frame_fc8_CAD_frame_0_split_0
I0921 21:03:53.472769  5174 net.cpp:342] prob_frame -> fc8_CAD_frame_prob
I0921 21:03:53.472774  5174 net.cpp:113] Setting up prob_frame
I0921 21:03:53.472781  5174 net.cpp:120] Top shape: 5 5 (25)
I0921 21:03:53.472786  5174 layer_factory.hpp:74] Creating layer prob_action
I0921 21:03:53.472792  5174 net.cpp:84] Creating Layer prob_action
I0921 21:03:53.472797  5174 net.cpp:384] prob_action <- fc8_CAD_action_prob_action_cad_0_split_0
I0921 21:03:53.472803  5174 net.cpp:342] prob_action -> fc8_CAD_prob
I0921 21:03:53.472810  5174 net.cpp:113] Setting up prob_action
I0921 21:03:53.472816  5174 net.cpp:120] Top shape: 70 7 (490)
I0921 21:03:53.472820  5174 layer_factory.hpp:74] Creating layer prob_pose
I0921 21:03:53.472826  5174 net.cpp:84] Creating Layer prob_pose
I0921 21:03:53.472831  5174 net.cpp:384] prob_pose <- fc8_CAD_pose_fc8_CAD_pose_0_split_0
I0921 21:03:53.472837  5174 net.cpp:342] prob_pose -> fc8_CAD_pose_prob
I0921 21:03:53.472843  5174 net.cpp:113] Setting up prob_pose
I0921 21:03:53.472851  5174 net.cpp:120] Top shape: 70 8 (560)
I0921 21:03:53.472854  5174 layer_factory.hpp:74] Creating layer concatenation_a_p
I0921 21:03:53.472867  5174 net.cpp:84] Creating Layer concatenation_a_p
I0921 21:03:53.472878  5174 net.cpp:384] concatenation_a_p <- fc8_CAD_prob
I0921 21:03:53.472903  5174 net.cpp:384] concatenation_a_p <- fc8_CAD_pose_prob
I0921 21:03:53.472910  5174 net.cpp:342] concatenation_a_p -> concat_action_pose
I0921 21:03:53.472919  5174 net.cpp:113] Setting up concatenation_a_p
I0921 21:03:53.472926  5174 net.cpp:120] Top shape: 70 15 (1050)
I0921 21:03:53.472931  5174 layer_factory.hpp:74] Creating layer fc9
I0921 21:03:53.472939  5174 net.cpp:84] Creating Layer fc9
I0921 21:03:53.472942  5174 net.cpp:384] fc9 <- concat_action_pose
I0921 21:03:53.472951  5174 net.cpp:342] fc9 -> fc9_unnorm
I0921 21:03:53.472968  5174 net.cpp:113] Setting up fc9
I0921 21:03:53.472990  5174 net.cpp:120] Top shape: 70 40 (2800)
I0921 21:03:53.472998  5174 layer_factory.hpp:74] Creating layer prob_action_pose
I0921 21:03:53.473004  5174 net.cpp:84] Creating Layer prob_action_pose
I0921 21:03:53.473008  5174 net.cpp:384] prob_action_pose <- fc9_unnorm
I0921 21:03:53.473014  5174 net.cpp:342] prob_action_pose -> fc9
I0921 21:03:53.473021  5174 net.cpp:113] Setting up prob_action_pose
I0921 21:03:53.473027  5174 net.cpp:120] Top shape: 70 40 (2800)
I0921 21:03:53.473032  5174 layer_factory.hpp:74] Creating layer Data_arrange_layer_filter
I0921 21:03:55.411236  5174 net.cpp:84] Creating Layer Data_arrange_layer_filter
I0921 21:03:55.411262  5174 net.cpp:384] Data_arrange_layer_filter <- fc8_CAD_action_prob_action_cad_0_split_1
I0921 21:03:55.411272  5174 net.cpp:384] Data_arrange_layer_filter <- label_action_data_action_1_split_0
I0921 21:03:55.411278  5174 net.cpp:384] Data_arrange_layer_filter <- fc9
I0921 21:03:55.411285  5174 net.cpp:342] Data_arrange_layer_filter -> fc9_filtered
I0921 21:03:55.411294  5174 net.cpp:113] Setting up Data_arrange_layer_filter
I0921 21:03:55.411346  5174 net.cpp:120] Top shape: 5 98 (490)
I0921 21:03:55.411356  5174 layer_factory.hpp:74] Creating layer concatenation_s_a_p
I0921 21:03:55.411365  5174 net.cpp:84] Creating Layer concatenation_s_a_p
I0921 21:03:55.411370  5174 net.cpp:384] concatenation_s_a_p <- fc8_CAD_frame_prob
I0921 21:03:55.411376  5174 net.cpp:384] concatenation_s_a_p <- fc9_filtered
I0921 21:03:55.411384  5174 net.cpp:342] concatenation_s_a_p -> concat_all
I0921 21:03:55.411391  5174 net.cpp:113] Setting up concatenation_s_a_p
I0921 21:03:55.411399  5174 net.cpp:120] Top shape: 5 103 (515)
I0921 21:03:55.411404  5174 layer_factory.hpp:74] Creating layer concat_all_concatenation_s_a_p_0_split
I0921 21:03:55.411412  5174 net.cpp:84] Creating Layer concat_all_concatenation_s_a_p_0_split
I0921 21:03:55.411416  5174 net.cpp:384] concat_all_concatenation_s_a_p_0_split <- concat_all
I0921 21:03:55.411422  5174 net.cpp:342] concat_all_concatenation_s_a_p_0_split -> concat_all_concatenation_s_a_p_0_split_0
I0921 21:03:55.411428  5174 net.cpp:342] concat_all_concatenation_s_a_p_0_split -> concat_all_concatenation_s_a_p_0_split_1
I0921 21:03:55.411435  5174 net.cpp:342] concat_all_concatenation_s_a_p_0_split -> concat_all_concatenation_s_a_p_0_split_2
I0921 21:03:55.411442  5174 net.cpp:113] Setting up concat_all_concatenation_s_a_p_0_split
I0921 21:03:55.411449  5174 net.cpp:120] Top shape: 5 103 (515)
I0921 21:03:55.411454  5174 net.cpp:120] Top shape: 5 103 (515)
I0921 21:03:55.411459  5174 net.cpp:120] Top shape: 5 103 (515)
I0921 21:03:55.411463  5174 layer_factory.hpp:74] Creating layer Data_arrange_layer_init_message
I0921 21:03:55.413380  5174 net.cpp:84] Creating Layer Data_arrange_layer_init_message
I0921 21:03:55.413390  5174 net.cpp:384] Data_arrange_layer_init_message <- concat_all_concatenation_s_a_p_0_split_0
I0921 21:03:55.413398  5174 net.cpp:384] Data_arrange_layer_init_message <- label_action_data_action_1_split_1
I0921 21:03:55.413404  5174 net.cpp:342] Data_arrange_layer_init_message -> Initial_Messages
I0921 21:03:55.413411  5174 net.cpp:113] Setting up Data_arrange_layer_init_message
I0921 21:03:55.413444  5174 net.cpp:120] Top shape: 5 1545 (7725)
I0921 21:03:55.413451  5174 layer_factory.hpp:74] Creating layer Belief_Propagation_Recurrent_Neural_Network
I0921 21:03:55.413470  5174 net.cpp:84] Creating Layer Belief_Propagation_Recurrent_Neural_Network
I0921 21:03:55.413501  5174 net.cpp:384] Belief_Propagation_Recurrent_Neural_Network <- Initial_Messages
I0921 21:03:55.413507  5174 net.cpp:384] Belief_Propagation_Recurrent_Neural_Network <- concat_all_concatenation_s_a_p_0_split_1
I0921 21:03:55.413513  5174 net.cpp:384] Belief_Propagation_Recurrent_Neural_Network <- label_action_data_action_1_split_2
I0921 21:03:55.413519  5174 net.cpp:384] Belief_Propagation_Recurrent_Neural_Network <- fc8_CAD_frame_fc8_CAD_frame_0_split_1
I0921 21:03:55.413524  5174 net.cpp:384] Belief_Propagation_Recurrent_Neural_Network <- concat_all_concatenation_s_a_p_0_split_2
I0921 21:03:55.413532  5174 net.cpp:342] Belief_Propagation_Recurrent_Neural_Network -> action_pred
I0921 21:03:55.413544  5174 net.cpp:342] Belief_Propagation_Recurrent_Neural_Network -> scene_pred
I0921 21:03:55.413552  5174 net.cpp:113] Setting up Belief_Propagation_Recurrent_Neural_Network
I0921 21:03:55.413558  5174 BP_recurrent_layer.cpp:30] Initializing BP_recurrent layer: assuming input messages need 3 iterations for 5 batches
I0921 21:03:55.414573  5174 net.cpp:42] Initializing net from parameters: 
input: "MessageIn0"
input: "UnaryInput"
input: "label_action"
input: "fc8_context"
input: "concat_all"
force_backward: true
input_shape {
  dim: 5
  dim: 1545
}
input_shape {
  dim: 5
  dim: 103
}
input_shape {
  dim: 70
}
input_shape {
  dim: 5
  dim: 5
}
input_shape {
  dim: 5
  dim: 103
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_slice_action_frame_0"
  type: "Slice"
  bottom: "concat_all"
  top: "scene_score_normalized0"
  top: "cur_action_score_normalized_reshaped0"
  slice_param {
    slice_point: 5
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageIn1"
  type: "Python"
  bottom: "Initial_Messages"
  bottom: "label_action"
  top: "S_A_MessageIn1"
  top: "A_S_MessageIn1"
  top: "A_A_MessageIn1"
  python_param {
    module: "Message_In"
    layer: "Message_In"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_S_A_Message1"
  type: "InnerProduct"
  bottom: "S_A_MessageIn1"
  top: "S_A_MessageOut1"
  param {
    name: "W_hh_11"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 7
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_A_S_Message1"
  type: "InnerProduct"
  bottom: "A_S_MessageIn1"
  top: "A_S_MessageOut1"
  param {
    name: "W_hh_21"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 5
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_A_A_Message1"
  type: "InnerProduct"
  bottom: "A_A_MessageIn1"
  top: "A_A_MessageOut1"
  param {
    name: "W_hh_31"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 7
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Normalize_Scene_to_ActionM1"
  type: "Softmax"
  bottom: "S_A_MessageOut1"
  top: "S_A_MessageOut_normalized1"
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Normalize_Action_to_SceneM1"
  type: "Softmax"
  bottom: "A_S_MessageOut1"
  top: "A_S_MessageOut_normalized1"
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Normalize_Action_to_ActionM1"
  type: "Softmax"
  bottom: "A_A_MessageOut1"
  top: "A_A_MessageOut_normalized1"
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut1"
  type: "Python"
  bottom: "concat_all"
  bottom: "S_A_MessageOut_normalized1"
  bottom: "A_S_MessageOut_normalized1"
  bottom: "A_A_MessageOut_normalized1"
  bottom: "cur_action_score_normalized_reshaped0"
  bottom: "scene_score_normalized0"
  bottom: "label_action"
  top: "MessageIn1"
  top: "Message_11"
  top: "Message_21"
  python_param {
    module: "Message_Out"
    layer: "Message_Out"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_LB_scene1"
  type: "InnerProduct"
  bottom: "Message_11"
  top: "scene_score1"
  param {
    name: "W_ho_1"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 5
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Normalize_Scene_Pred1"
  type: "Softmax"
  bottom: "scene_score1"
  top: "scene_score_normalized1"
  softmax_param {
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_python_scene_block_prop1"
  type: "Python"
  bottom: "scene_score_normalized1"
  top: "scene_score_normalized_blocked1"
  python_param {
    module: "block_prop"
    layer: "block_prop"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_weight_scene_prev1"
  type: "EliwiseProduct"
  bottom: "scene_score_normalized_blocked1"
  top: "scene_score_normalized_weighted1"
  param {
    lr_mult: 10
    decay_mult: 10
  }
  eliwise_product_param {
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_LB_action1"
  type: "InnerProduct"
  bottom: "Message_21"
  top: "cur_action_score1"
  param {
    name: "W_ho_2"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 7
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 2
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_python_action_block_prop1"
  type: "Python"
  bottom: "cur_action_score1"
  top: "cur_action_score_blocked1"
  python_param {
    module: "block_prop"
    layer: "block_prop"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_weight_action_prev11"
  type: "EliwiseProduct"
  bottom: "cur_action_score_blocked1"
  top: "cur_action_score_weighted11"
  param {
    lr_mult: 10
    decay_mult: 10
  }
  eliwise_product_param {
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_weight_action_prev21"
  type: "EliwiseProduct"
  bottom: "cur_action_score_blocked1"
  top: "cur_action_score_weighted21"
  param {
    lr_mult: 10
    decay_mult: 10
  }
  eliwise_product_param {
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Normalize_Action_Pred1"
  type: "Softmax"
  bottom: "cur_action_score1"
  top: "cur_action_score_normalized1"
  softmax_param {
    axis: 2
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_python_filter1"
  type: "Python"
  bottom: "cur_action_score_normalized1"
  bottom: "label_action"
  top: "cur_action_score_normalized_reshaped1"
  python_param {
    module: "filter_action"
    layer: "filter_action"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_python_reshape11"
  type: "Python"
  bottom: "cur_action_score1"
  top: "cur_action_score_reshaped1"
  python_param {
    module: "Message_Reshape1"
    layer: "Message_Reshape1"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_python_checkdiff1"
  type: "Python"
  bottom: "cur_action_score_reshaped1"
  top: "cur_action_score_reshaped_checked1"
  python_param {
    module: "check_diff"
    layer: "check_diff"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_graphical_edge2"
  type: "Python"
  bottom: "concat_all"
  bottom: "MessageIn1"
  bottom: "label_action"
  top: "gate_input2"
  python_param {
    module: "graphical_edge"
    layer: "graphical_edge"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_gate_compute2"
  type: "InnerProduct"
  bottom: "gate_input2"
  top: "gates2"
  param {
    name: "W_gh_1"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_structured_gate2"
  type: "Python"
  bottom: "gates2"
  bottom: "MessageIn1"
  bottom: "label_action"
  top: "gated_MessageIn1"
  python_param {
    module: "structured_gate"
    layer: "structured_gate"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageIn2"
  type: "Python"
  bottom: "MessageIn1"
  bottom: "label_action"
  bottom: "scene_score_normalized_blocked1"
  bottom: "cur_action_score_blocked1"
  bottom: "cur_action_score_blocked1"
  top: "S_A_MessageIn2"
  top: "A_S_MessageIn2"
  top: "A_A_MessageIn2"
  python_param {
    module: "Message_In"
    layer: "Message_In"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_S_A_Message2"
  type: "InnerProduct"
  bottom: "S_A_MessageIn2"
  top: "S_A_MessageOut2"
  param {
    name: "W_hh_1"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 7
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_A_S_Message2"
  type: "InnerProduct"
  bottom: "A_S_MessageIn2"
  top: "A_S_MessageOut2"
  param {
    name: "W_hh_2"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 5
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_A_A_Message2"
  type: "InnerProduct"
  bottom: "A_A_MessageIn2"
  top: "A_A_MessageOut2"
  param {
    name: "W_hh_3"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 7
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Normalize_Scene_to_ActionM2"
  type: "Softmax"
  bottom: "S_A_MessageOut2"
  top: "S_A_MessageOut_normalized2"
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Normalize_Action_to_SceneM2"
  type: "Softmax"
  bottom: "A_S_MessageOut2"
  top: "A_S_MessageOut_normalized2"
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Normalize_Action_to_ActionM2"
  type: "Softmax"
  bottom: "A_A_MessageOut2"
  top: "A_A_MessageOut_normalized2"
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut2"
  type: "Python"
  bottom: "concat_all"
  bottom: "S_A_MessageOut_normalized2"
  bottom: "A_S_MessageOut_normalized2"
  bottom: "A_A_MessageOut_normalized2"
  bottom: "cur_action_score_normalized_reshaped1"
  bottom: "scene_score_normalized1"
  bottom: "label_action"
  top: "MessageIn2"
  top: "Message_12"
  top: "Message_22"
  python_param {
    module: "Message_Out"
    layer: "Message_Out"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_LB_scene2"
  type: "InnerProduct"
  bottom: "Message_12"
  top: "scene_score2"
  param {
    name: "W_ho_1"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 5
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Normalize_Scene_Pred2"
  type: "Softmax"
  bottom: "scene_score2"
  top: "scene_score_normalized2"
  softmax_param {
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_python_scene_block_prop2"
  type: "Python"
  bottom: "scene_score_normalized2"
  top: "scene_score_normalized_blocked2"
  python_param {
    module: "block_prop"
    layer: "block_prop"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_weight_scene_prev2"
  type: "EliwiseProduct"
  bottom: "scene_score_normalized_blocked2"
  top: "scene_score_normalized_weighted2"
  param {
    lr_mult: 10
    decay_mult: 10
  }
  eliwise_product_param {
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_LB_action2"
  type: "InnerProduct"
  bottom: "Message_22"
  top: "cur_action_score2"
  param {
    name: "W_ho_2"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 7
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 2
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_python_action_block_prop2"
  type: "Python"
  bottom: "cur_action_score2"
  top: "cur_action_score_blocked2"
  python_param {
    module: "block_prop"
    layer: "block_prop"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_weight_action_prev12"
  type: "EliwiseProduct"
  bottom: "cur_action_score_blocked2"
  top: "cur_action_score_weighted12"
  param {
    lr_mult: 10
    decay_mult: 10
  }
  eliwise_product_param {
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_weight_action_prev22"
  type: "EliwiseProduct"
  bottom: "cur_action_score_blocked2"
  top: "cur_action_score_weighted22"
  param {
    lr_mult: 10
    decay_mult: 10
  }
  eliwise_product_param {
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Normalize_Action_Pred2"
  type: "Softmax"
  bottom: "cur_action_score2"
  top: "cur_action_score_normalized2"
  softmax_param {
    axis: 2
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_python_filter2"
  type: "Python"
  bottom: "cur_action_score_normalized2"
  bottom: "label_action"
  top: "cur_action_score_normalized_reshaped2"
  python_param {
    module: "filter_action"
    layer: "filter_action"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_python_reshape12"
  type: "Python"
  bottom: "cur_action_score2"
  top: "cur_action_score_reshaped2"
  python_param {
    module: "Message_Reshape1"
    layer: "Message_Reshape1"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_python_checkdiff2"
  type: "Python"
  bottom: "cur_action_score_reshaped2"
  top: "cur_action_score_reshaped_checked2"
  python_param {
    module: "check_diff"
    layer: "check_diff"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_graphical_edge3"
  type: "Python"
  bottom: "concat_all"
  bottom: "MessageIn2"
  bottom: "label_action"
  top: "gate_input3"
  python_param {
    module: "graphical_edge"
    layer: "graphical_edge"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_gate_compute3"
  type: "InnerProduct"
  bottom: "gate_input3"
  top: "gates3"
  param {
    name: "W_gh_1"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_structured_gate3"
  type: "Python"
  bottom: "gates3"
  bottom: "MessageIn2"
  bottom: "label_action"
  top: "gated_MessageIn2"
  python_param {
    module: "structured_gate"
    layer: "structured_gate"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageIn3"
  type: "Python"
  bottom: "MessageIn2"
  bottom: "label_action"
  bottom: "scene_score_normalized_blocked2"
  bottom: "cur_action_score_blocked2"
  bottom: "cur_action_score_blocked2"
  top: "S_A_MessageIn3"
  top: "A_S_MessageIn3"
  top: "A_A_MessageIn3"
  python_param {
    module: "Message_In"
    layer: "Message_In"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_S_A_Message3"
  type: "InnerProduct"
  bottom: "S_A_MessageIn3"
  top: "S_A_MessageOut3"
  param {
    name: "W_hh_1"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 7
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_A_S_Message3"
  type: "InnerProduct"
  bottom: "A_S_MessageIn3"
  top: "A_S_MessageOut3"
  param {
    name: "W_hh_2"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 5
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_A_A_Message3"
  type: "InnerProduct"
  bottom: "A_A_MessageIn3"
  top: "A_A_MessageOut3"
  param {
    name: "W_hh_3"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 7
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Normalize_Scene_to_ActionM3"
  type: "Softmax"
  bottom: "S_A_MessageOut3"
  top: "S_A_MessageOut_normalized3"
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Normalize_Action_to_SceneM3"
  type: "Softmax"
  bottom: "A_S_MessageOut3"
  top: "A_S_MessageOut_normalized3"
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Normalize_Action_to_ActionM3"
  type: "Softmax"
  bottom: "A_A_MessageOut3"
  top: "A_A_MessageOut_normalized3"
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut3"
  type: "Python"
  bottom: "concat_all"
  bottom: "S_A_MessageOut_normalized3"
  bottom: "A_S_MessageOut_normalized3"
  bottom: "A_A_MessageOut_normalized3"
  bottom: "cur_action_score_normalized_reshaped2"
  bottom: "scene_score_normalized2"
  bottom: "label_action"
  top: "MessageIn3"
  top: "Message_13"
  top: "Message_23"
  python_param {
    module: "Message_Out"
    layer: "Message_Out"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_LB_scene3"
  type: "InnerProduct"
  bottom: "Message_13"
  top: "scene_score3"
  param {
    name: "W_ho_1"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 5
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Normalize_Scene_Pred3"
  type: "Softmax"
  bottom: "scene_score3"
  top: "scene_score_normalized3"
  softmax_param {
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_LB_action3"
  type: "InnerProduct"
  bottom: "Message_23"
  top: "cur_action_score3"
  param {
    name: "W_ho_2"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 7
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 2
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Normalize_Action_Pred3"
  type: "Softmax"
  bottom: "cur_action_score3"
  top: "cur_action_score_normalized3"
  softmax_param {
    axis: 2
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_python_filter3"
  type: "Python"
  bottom: "cur_action_score_normalized3"
  bottom: "label_action"
  top: "cur_action_score_normalized_reshaped3"
  python_param {
    module: "filter_action"
    layer: "filter_action"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_python_reshape13"
  type: "Python"
  bottom: "cur_action_score3"
  top: "cur_action_score_reshaped3"
  python_param {
    module: "Message_Reshape1"
    layer: "Message_Reshape1"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_python_checkdiff3"
  type: "Python"
  bottom: "cur_action_score_reshaped3"
  top: "cur_action_score_reshaped_checked3"
  python_param {
    module: "check_diff"
    layer: "check_diff"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_output_python_concat_scene"
  type: "Python"
  bottom: "scene_score1"
  bottom: "scene_score2"
  bottom: "scene_score3"
  top: "scene_pred"
  python_param {
    module: "MyConcat"
    layer: "MyConcat"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_output_python_concat_action"
  type: "Python"
  bottom: "cur_action_score_reshaped_checked1"
  bottom: "cur_action_score_reshaped_checked2"
  bottom: "cur_action_score_reshaped_checked3"
  top: "o_action_forcheck"
  python_param {
    module: "MyConcat"
    layer: "MyConcat"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_python_checkdiff_o"
  type: "Python"
  bottom: "o_action_forcheck"
  bottom: "o_action_forcheck"
  top: "action_pred"
  python_param {
    module: "check_diff"
    layer: "check_diff"
  }
}
F0921 21:03:55.414700  5174 insert_splits.cpp:35] Unknown blob input Initial_Messages to layer 0
*** Check failure stack trace: ***
    @     0x7f7f1c41bb5d  google::LogMessage::Fail()
    @     0x7f7f1c41fb77  google::LogMessage::SendToLog()
    @     0x7f7f1c41d9f9  google::LogMessage::Flush()
    @     0x7f7f1c41dcfd  google::LogMessageFatal::~LogMessageFatal()
    @     0x7f7f2230cffd  caffe::InsertSplits()
    @     0x7f7f222f15ed  caffe::Net<>::Init()
    @     0x7f7f222f4652  caffe::Net<>::Net()
    @     0x7f7f2222f214  caffe::BP_RecurrentLayer<>::LayerSetUp()
    @     0x7f7f222f1f07  caffe::Net<>::Init()
    @     0x7f7f222f4652  caffe::Net<>::Net()
    @     0x7f7f222f7642  caffe::Solver<>::InitTrainNet()
    @     0x7f7f222fac6f  caffe::Solver<>::Init()
    @     0x7f7f222fb0a5  caffe::Solver<>::Solver()
    @           0x40b18d  caffe::SGDSolver<>::SGDSolver()
    @           0x40e940  caffe::GetSolver<>()
    @           0x4096be  train()
    @           0x406c0e  main
    @       0x3167a1ed5d  (unknown)
    @           0x4062d9  (unknown)
finetunes1_RNN_print.sh: line 1:  5174 Aborted                 ../caffe-master/build/tools/caffe train -weights /media/storage/zhiweid/CollectiveActivityDataset/finetune_RNN/net_surgery_forzhiwei.caffemodel -solver=solver_print.prototxt
