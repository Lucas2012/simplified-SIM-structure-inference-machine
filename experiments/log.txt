I0929 13:11:01.150804 22545 caffe.cpp:113] Use GPU with device ID 0
I0929 13:11:01.777097 22545 caffe.cpp:121] Starting Optimization
I0929 13:11:01.777310 22545 solver.cpp:32] Initializing solver from parameters: 
test_iter: 140
test_interval: 1000
base_lr: 0.0001
display: 20
max_iter: 20000
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 10000
snapshot: 1000
snapshot_prefix: "snapshots_iter1/snapshots_s1"
solver_mode: GPU
net: "prototxts/test_print_5_simplified.prototxt"
I0929 13:11:01.777371 22545 solver.cpp:70] Creating training net from net file: prototxts/test_print_5_simplified.prototxt
I0929 13:11:01.782922 22545 net.cpp:261] The NetState phase (0) differed from the phase (1) specified by a rule in layer data_action
I0929 13:11:01.782953 22545 net.cpp:261] The NetState phase (0) differed from the phase (1) specified by a rule in layer data_frame
I0929 13:11:01.783011 22545 net.cpp:261] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy_scene
I0929 13:11:01.783021 22545 net.cpp:261] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy_action
I0929 13:11:01.784245 22545 net.cpp:42] Initializing net from parameters: 
name: "CaffeNet"
force_backward: true
state {
  phase: TRAIN
}
layer {
  name: "data_action"
  type: "Data"
  top: "data_action"
  top: "label_action"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: false
    crop_size: 227
    mean_file: "imagenet_mean.binaryproto"
  }
  data_param {
    source: "/cs/vml2/zhiweid/CVPR16_NEW/bp-rnn/experiments/0903/CAD_action_train_lmdb_0903"
    batch_size: 70
    backend: LMDB
  }
}
layer {
  name: "conv1_action"
  type: "Convolution"
  bottom: "data_action"
  top: "conv1_action"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1_action"
  type: "ReLU"
  bottom: "conv1_action"
  top: "conv1_action"
}
layer {
  name: "pool1_action"
  type: "Pooling"
  bottom: "conv1_action"
  top: "pool1_action"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1_action"
  type: "LRN"
  bottom: "pool1_action"
  top: "norm1_action"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2_action"
  type: "Convolution"
  bottom: "norm1_action"
  top: "conv2_action"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2_action"
  type: "ReLU"
  bottom: "conv2_action"
  top: "conv2_action"
}
layer {
  name: "pool2_action"
  type: "Pooling"
  bottom: "conv2_action"
  top: "pool2_action"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2_action"
  type: "LRN"
  bottom: "pool2_action"
  top: "norm2_action"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3_action"
  type: "Convolution"
  bottom: "norm2_action"
  top: "conv3_action"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3_action"
  type: "ReLU"
  bottom: "conv3_action"
  top: "conv3_action"
}
layer {
  name: "conv4_action"
  type: "Convolution"
  bottom: "conv3_action"
  top: "conv4_action"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4_action"
  type: "ReLU"
  bottom: "conv4_action"
  top: "conv4_action"
}
layer {
  name: "conv5_action"
  type: "Convolution"
  bottom: "conv4_action"
  top: "conv5_action"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5_action"
  type: "ReLU"
  bottom: "conv5_action"
  top: "conv5_action"
}
layer {
  name: "pool5_action"
  type: "Pooling"
  bottom: "conv5_action"
  top: "pool5_action"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6_action"
  type: "InnerProduct"
  bottom: "pool5_action"
  top: "fc6_action"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6_action"
  type: "ReLU"
  bottom: "fc6_action"
  top: "fc6_action"
}
layer {
  name: "drop6_action"
  type: "Dropout"
  bottom: "fc6_action"
  top: "fc6_action"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7_action"
  type: "InnerProduct"
  bottom: "fc6_action"
  top: "fc7_action"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu7_action"
  type: "ReLU"
  bottom: "fc7_action"
  top: "fc7_action"
}
layer {
  name: "drop7_action"
  type: "Dropout"
  bottom: "fc7_action"
  top: "fc7_action"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8_CAD_action"
  type: "InnerProduct"
  bottom: "fc7_action"
  top: "fc8_CAD_action"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 7
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "data_frame"
  type: "Data"
  top: "data_frame"
  top: "label_frame"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 227
    mean_file: "imagenet_mean.binaryproto"
  }
  data_param {
    source: "/cs/vml2/zhiweid/CVPR16_NEW/bp-rnn/experiments/0903/CAD_frame_train_lmdb_0903"
    batch_size: 5
    backend: LMDB
  }
}
layer {
  name: "conv1_frame"
  type: "Convolution"
  bottom: "data_frame"
  top: "conv1_frame"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1_frame"
  type: "ReLU"
  bottom: "conv1_frame"
  top: "conv1_frame"
}
layer {
  name: "pool1_frame"
  type: "Pooling"
  bottom: "conv1_frame"
  top: "pool1_frame"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1_frame"
  type: "LRN"
  bottom: "pool1_frame"
  top: "norm1_frame"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2_frame"
  type: "Convolution"
  bottom: "norm1_frame"
  top: "conv2_frame"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2_frame"
  type: "ReLU"
  bottom: "conv2_frame"
  top: "conv2_frame"
}
layer {
  name: "pool2_frame"
  type: "Pooling"
  bottom: "conv2_frame"
  top: "pool2_frame"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2_frame"
  type: "LRN"
  bottom: "pool2_frame"
  top: "norm2_frame"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3_frame"
  type: "Convolution"
  bottom: "norm2_frame"
  top: "conv3_frame"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3_frame"
  type: "ReLU"
  bottom: "conv3_frame"
  top: "conv3_frame"
}
layer {
  name: "conv4_frame"
  type: "Convolution"
  bottom: "conv3_frame"
  top: "conv4_frame"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4_frame"
  type: "ReLU"
  bottom: "conv4_frame"
  top: "conv4_frame"
}
layer {
  name: "conv5_frame"
  type: "Convolution"
  bottom: "conv4_frame"
  top: "conv5_frame"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5_frame"
  type: "ReLU"
  bottom: "conv5_frame"
  top: "conv5_frame"
}
layer {
  name: "pool5_frame"
  type: "Pooling"
  bottom: "conv5_frame"
  top: "pool5_frame"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6_frame"
  type: "InnerProduct"
  bottom: "pool5_frame"
  top: "fc6_frame"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6_frame"
  type: "ReLU"
  bottom: "fc6_frame"
  top: "fc6_frame"
}
layer {
  name: "drop6_frame"
  type: "Dropout"
  bottom: "fc6_frame"
  top: "fc6_frame"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7_frame"
  type: "InnerProduct"
  bottom: "fc6_frame"
  top: "fc7_frame"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu7_frame"
  type: "ReLU"
  bottom: "fc7_frame"
  top: "fc7_frame"
}
layer {
  name: "drop7_frame"
  type: "Dropout"
  bottom: "fc7_frame"
  top: "fc7_frame"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8_CAD_frame"
  type: "InnerProduct"
  bottom: "fc7_frame"
  top: "fc8_CAD_frame"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 5
    bias_term: true
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "prob_frame"
  type: "Softmax"
  bottom: "fc8_CAD_frame"
  top: "fc8_CAD_frame_prob"
}
layer {
  name: "Data_arrange_layer_filter"
  type: "Python"
  bottom: "fc8_CAD_action"
  bottom: "label_action"
  top: "fc9_filtered"
  python_param {
    module: "Data_arrange"
    layer: "Data_Arrange_Layer"
  }
}
layer {
  name: "concatenation_s_a_p"
  type: "Concat"
  bottom: "fc8_CAD_frame_prob"
  bottom: "fc9_filtered"
  top: "concat_all0"
  concat_param {
    concat_dim: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageIn1"
  type: "Python"
  bottom: "concat_all0"
  bottom: "label_action"
  top: "A_A_MessageIn1"
  top: "A_S_MessageIn1"
  top: "S_A_MessageIn1"
  python_param {
    module: "simplified_message_in"
    layer: "simplified_message_in"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_A_A_Message1"
  type: "InnerProduct"
  bottom: "A_A_MessageIn1"
  top: "A_A_MessageOut1"
  param {
    name: "W_hh_1"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 7
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_A_S_Message1"
  type: "InnerProduct"
  bottom: "A_S_MessageIn1"
  top: "A_S_MessageOut1"
  param {
    name: "W_hh_2"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 5
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_S_A_Message1"
  type: "InnerProduct"
  bottom: "S_A_MessageIn1"
  top: "S_A_MessageOut1"
  param {
    name: "W_hh_3"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 7
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut1"
  type: "Python"
  bottom: "A_A_MessageOut1"
  bottom: "A_S_MessageOut1"
  bottom: "S_A_MessageOut1"
  bottom: "label_action"
  bottom: "concat_all0"
  top: "scene_1"
  top: "action_1"
  python_param {
    module: "simplified_message_out"
    layer: "simplified_message_out"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Scene1"
  type: "InnerProduct"
  bottom: "scene_1"
  top: "scene_out1"
  param {
    name: "W_ho_1"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 5
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Action1"
  type: "InnerProduct"
  bottom: "action_1"
  top: "action_out1"
  param {
    name: "W_ho_2"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 7
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_message_reshape1"
  type: "Python"
  bottom: "action_out1"
  top: "action_out_reshaped1"
  python_param {
    module: "Message_Reshape1"
    layer: "Message_Reshape1"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Normalize_Scene_1"
  type: "Softmax"
  bottom: "scene_1"
  top: "scene_normalized_1"
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Normalize_Action_1"
  type: "Softmax"
  bottom: "action_1"
  top: "action_normalized_1"
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Data_arrange_layer_filter1"
  type: "Python"
  bottom: "action_normalized_1"
  bottom: "label_action"
  top: "fc9_filtered1"
  python_param {
    module: "Data_arrange"
    layer: "Data_Arrange_Layer"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_concatenation_s_a1"
  type: "Concat"
  bottom: "scene_normalized_1"
  bottom: "fc9_filtered1"
  top: "concat_all1"
  concat_param {
    concat_dim: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageIn2"
  type: "Python"
  bottom: "concat_all1"
  bottom: "label_action"
  top: "A_A_MessageIn2"
  top: "A_S_MessageIn2"
  top: "S_A_MessageIn2"
  python_param {
    module: "simplified_message_in"
    layer: "simplified_message_in"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_A_A_Message2"
  type: "InnerProduct"
  bottom: "A_A_MessageIn2"
  top: "A_A_MessageOut2"
  param {
    name: "W_hh_1"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 7
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_A_S_Message2"
  type: "InnerProduct"
  bottom: "A_S_MessageIn2"
  top: "A_S_MessageOut2"
  param {
    name: "W_hh_2"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 5
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_S_A_Message2"
  type: "InnerProduct"
  bottom: "S_A_MessageIn2"
  top: "S_A_MessageOut2"
  param {
    name: "W_hh_3"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 7
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut2"
  type: "Python"
  bottom: "A_A_MessageOut2"
  bottom: "A_S_MessageOut2"
  bottom: "S_A_MessageOut2"
  bottom: "label_action"
  bottom: "concat_all0"
  top: "scene_2"
  top: "action_2"
  python_param {
    module: "simplified_message_out"
    layer: "simplified_message_out"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Scene2"
  type: "InnerProduct"
  bottom: "scene_2"
  top: "scene_out2"
  param {
    name: "W_ho_1"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 5
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Action2"
  type: "InnerProduct"
  bottom: "action_2"
  top: "action_out2"
  param {
    name: "W_ho_2"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 7
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_message_reshape2"
  type: "Python"
  bottom: "action_out2"
  top: "action_out_reshaped2"
  python_param {
    module: "Message_Reshape1"
    layer: "Message_Reshape1"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Normalize_Scene_2"
  type: "Softmax"
  bottom: "scene_2"
  top: "scene_normalized_2"
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Normalize_Action_2"
  type: "Softmax"
  bottom: "action_2"
  top: "action_normalized_2"
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Data_arrange_layer_filter2"
  type: "Python"
  bottom: "action_normalized_2"
  bottom: "label_action"
  top: "fc9_filtered2"
  python_param {
    module: "Data_arrange"
    layer: "Data_Arrange_Layer"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_concatenation_s_a2"
  type: "Concat"
  bottom: "scene_normalized_2"
  bottom: "fc9_filtered2"
  top: "concat_all2"
  concat_param {
    concat_dim: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageIn3"
  type: "Python"
  bottom: "concat_all2"
  bottom: "label_action"
  top: "A_A_MessageIn3"
  top: "A_S_MessageIn3"
  top: "S_A_MessageIn3"
  python_param {
    module: "simplified_message_in"
    layer: "simplified_message_in"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_A_A_Message3"
  type: "InnerProduct"
  bottom: "A_A_MessageIn3"
  top: "A_A_MessageOut3"
  param {
    name: "W_hh_1"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 7
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_A_S_Message3"
  type: "InnerProduct"
  bottom: "A_S_MessageIn3"
  top: "A_S_MessageOut3"
  param {
    name: "W_hh_2"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 5
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_S_A_Message3"
  type: "InnerProduct"
  bottom: "S_A_MessageIn3"
  top: "S_A_MessageOut3"
  param {
    name: "W_hh_3"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 7
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut3"
  type: "Python"
  bottom: "A_A_MessageOut3"
  bottom: "A_S_MessageOut3"
  bottom: "S_A_MessageOut3"
  bottom: "label_action"
  bottom: "concat_all0"
  top: "scene_3"
  top: "action_3"
  python_param {
    module: "simplified_message_out"
    layer: "simplified_message_out"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Scene3"
  type: "InnerProduct"
  bottom: "scene_3"
  top: "scene_out3"
  param {
    name: "W_ho_1"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 5
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Action3"
  type: "InnerProduct"
  bottom: "action_3"
  top: "action_out3"
  param {
    name: "W_ho_2"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 7
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_message_reshape3"
  type: "Python"
  bottom: "action_out3"
  top: "action_out_reshaped3"
  python_param {
    module: "Message_Reshape1"
    layer: "Message_Reshape1"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Normalize_Scene_3"
  type: "Softmax"
  bottom: "scene_3"
  top: "scene_normalized_3"
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Normalize_Action_3"
  type: "Softmax"
  bottom: "action_3"
  top: "action_normalized_3"
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Data_arrange_layer_filter3"
  type: "Python"
  bottom: "action_normalized_3"
  bottom: "label_action"
  top: "fc9_filtered3"
  python_param {
    module: "Data_arrange"
    layer: "Data_Arrange_Layer"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_concatenation_s_a3"
  type: "Concat"
  bottom: "scene_normalized_3"
  bottom: "fc9_filtered3"
  top: "concat_all3"
  concat_param {
    concat_dim: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageIn4"
  type: "Python"
  bottom: "concat_all3"
  bottom: "label_action"
  top: "A_A_MessageIn4"
  top: "A_S_MessageIn4"
  top: "S_A_MessageIn4"
  python_param {
    module: "simplified_message_in"
    layer: "simplified_message_in"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_A_A_Message4"
  type: "InnerProduct"
  bottom: "A_A_MessageIn4"
  top: "A_A_MessageOut4"
  param {
    name: "W_hh_1"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 7
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_A_S_Message4"
  type: "InnerProduct"
  bottom: "A_S_MessageIn4"
  top: "A_S_MessageOut4"
  param {
    name: "W_hh_2"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 5
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_S_A_Message4"
  type: "InnerProduct"
  bottom: "S_A_MessageIn4"
  top: "S_A_MessageOut4"
  param {
    name: "W_hh_3"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 7
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut4"
  type: "Python"
  bottom: "A_A_MessageOut4"
  bottom: "A_S_MessageOut4"
  bottom: "S_A_MessageOut4"
  bottom: "label_action"
  bottom: "concat_all0"
  top: "scene_4"
  top: "action_4"
  python_param {
    module: "simplified_message_out"
    layer: "simplified_message_out"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Scene4"
  type: "InnerProduct"
  bottom: "scene_4"
  top: "scene_out4"
  param {
    name: "W_ho_1"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 5
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Action4"
  type: "InnerProduct"
  bottom: "action_4"
  top: "action_out4"
  param {
    name: "W_ho_2"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 7
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_message_reshape4"
  type: "Python"
  bottom: "action_out4"
  top: "action_out_reshaped4"
  python_param {
    module: "Message_Reshape1"
    layer: "Message_Reshape1"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Normalize_Scene_4"
  type: "Softmax"
  bottom: "scene_4"
  top: "scene_normalized_4"
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Normalize_Action_4"
  type: "Softmax"
  bottom: "action_4"
  top: "action_normalized_4"
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Data_arrange_layer_filter4"
  type: "Python"
  bottom: "action_normalized_4"
  bottom: "label_action"
  top: "fc9_filtered4"
  python_param {
    module: "Data_arrange"
    layer: "Data_Arrange_Layer"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_concatenation_s_a4"
  type: "Concat"
  bottom: "scene_normalized_4"
  bottom: "fc9_filtered4"
  top: "concat_all4"
  concat_param {
    concat_dim: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageIn5"
  type: "Python"
  bottom: "concat_all4"
  bottom: "label_action"
  top: "A_A_MessageIn5"
  top: "A_S_MessageIn5"
  top: "S_A_MessageIn5"
  python_param {
    module: "simplified_message_in"
    layer: "simplified_message_in"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_A_A_Message5"
  type: "InnerProduct"
  bottom: "A_A_MessageIn5"
  top: "A_A_MessageOut5"
  param {
    name: "W_hh_1"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 7
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_A_S_Message5"
  type: "InnerProduct"
  bottom: "A_S_MessageIn5"
  top: "A_S_MessageOut5"
  param {
    name: "W_hh_2"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 5
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_S_A_Message5"
  type: "InnerProduct"
  bottom: "S_A_MessageIn5"
  top: "S_A_MessageOut5"
  param {
    name: "W_hh_3"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 7
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut5"
  type: "Python"
  bottom: "A_A_MessageOut5"
  bottom: "A_S_MessageOut5"
  bottom: "S_A_MessageOut5"
  bottom: "label_action"
  bottom: "concat_all0"
  top: "scene_5"
  top: "action_5"
  python_param {
    module: "simplified_message_out"
    layer: "simplified_message_out"
  }
}
layer {
  name: "Belief_Propagation_Recurrent_Neural_Network_Scene5"
  type: "InnerProduct"
  bottom: "scene_5"
  top: "scene_out5"
  param {
    name: "W_ho_1"
    lr_mult: 10
    decay_mult: 10
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 5
    bias_term: true
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_fil
I0929 13:11:01.784900 22545 layer_factory.hpp:74] Creating layer data_action
I0929 13:11:01.784924 22545 net.cpp:84] Creating Layer data_action
I0929 13:11:01.784935 22545 net.cpp:342] data_action -> data_action
I0929 13:11:01.784967 22545 net.cpp:342] data_action -> label_action
I0929 13:11:01.784978 22545 net.cpp:113] Setting up data_action
I0929 13:11:01.792440 22545 db.cpp:34] Opened lmdb /cs/vml2/zhiweid/CVPR16_NEW/bp-rnn/experiments/0903/CAD_action_train_lmdb_0903
I0929 13:11:01.793133 22545 data_layer.cpp:67] output data size: 70,3,227,227
I0929 13:11:01.793162 22545 data_transformer.cpp:22] Loading mean file from: imagenet_mean.binaryproto
I0929 13:11:01.807463 22545 net.cpp:120] Top shape: 70 3 227 227 (10821090)
I0929 13:11:01.807508 22545 net.cpp:120] Top shape: 70 (70)
I0929 13:11:01.807533 22545 layer_factory.hpp:74] Creating layer label_action_data_action_1_split
I0929 13:11:01.807571 22545 net.cpp:84] Creating Layer label_action_data_action_1_split
I0929 13:11:01.807586 22545 net.cpp:384] label_action_data_action_1_split <- label_action
I0929 13:11:01.807610 22545 net.cpp:342] label_action_data_action_1_split -> label_action_data_action_1_split_0
I0929 13:11:01.807631 22545 net.cpp:342] label_action_data_action_1_split -> label_action_data_action_1_split_1
I0929 13:11:01.807648 22545 net.cpp:342] label_action_data_action_1_split -> label_action_data_action_1_split_2
I0929 13:11:01.807665 22545 net.cpp:342] label_action_data_action_1_split -> label_action_data_action_1_split_3
I0929 13:11:01.807682 22545 net.cpp:342] label_action_data_action_1_split -> label_action_data_action_1_split_4
I0929 13:11:01.807704 22545 net.cpp:342] label_action_data_action_1_split -> label_action_data_action_1_split_5
I0929 13:11:01.807746 22545 net.cpp:342] label_action_data_action_1_split -> label_action_data_action_1_split_6
I0929 13:11:01.807764 22545 net.cpp:342] label_action_data_action_1_split -> label_action_data_action_1_split_7
I0929 13:11:01.807780 22545 net.cpp:342] label_action_data_action_1_split -> label_action_data_action_1_split_8
I0929 13:11:01.807796 22545 net.cpp:342] label_action_data_action_1_split -> label_action_data_action_1_split_9
I0929 13:11:01.807812 22545 net.cpp:342] label_action_data_action_1_split -> label_action_data_action_1_split_10
I0929 13:11:01.807827 22545 net.cpp:342] label_action_data_action_1_split -> label_action_data_action_1_split_11
I0929 13:11:01.807843 22545 net.cpp:342] label_action_data_action_1_split -> label_action_data_action_1_split_12
I0929 13:11:01.807859 22545 net.cpp:342] label_action_data_action_1_split -> label_action_data_action_1_split_13
I0929 13:11:01.807875 22545 net.cpp:342] label_action_data_action_1_split -> label_action_data_action_1_split_14
I0929 13:11:01.807893 22545 net.cpp:342] label_action_data_action_1_split -> label_action_data_action_1_split_15
I0929 13:11:01.807909 22545 net.cpp:342] label_action_data_action_1_split -> label_action_data_action_1_split_16
I0929 13:11:01.807927 22545 net.cpp:342] label_action_data_action_1_split -> label_action_data_action_1_split_17
I0929 13:11:01.807941 22545 net.cpp:113] Setting up label_action_data_action_1_split
I0929 13:11:01.807965 22545 net.cpp:120] Top shape: 70 (70)
I0929 13:11:01.807976 22545 net.cpp:120] Top shape: 70 (70)
I0929 13:11:01.807988 22545 net.cpp:120] Top shape: 70 (70)
I0929 13:11:01.807999 22545 net.cpp:120] Top shape: 70 (70)
I0929 13:11:01.808009 22545 net.cpp:120] Top shape: 70 (70)
I0929 13:11:01.808020 22545 net.cpp:120] Top shape: 70 (70)
I0929 13:11:01.808032 22545 net.cpp:120] Top shape: 70 (70)
I0929 13:11:01.808043 22545 net.cpp:120] Top shape: 70 (70)
I0929 13:11:01.808054 22545 net.cpp:120] Top shape: 70 (70)
I0929 13:11:01.808064 22545 net.cpp:120] Top shape: 70 (70)
I0929 13:11:01.808075 22545 net.cpp:120] Top shape: 70 (70)
I0929 13:11:01.808086 22545 net.cpp:120] Top shape: 70 (70)
I0929 13:11:01.808097 22545 net.cpp:120] Top shape: 70 (70)
I0929 13:11:01.808109 22545 net.cpp:120] Top shape: 70 (70)
I0929 13:11:01.808120 22545 net.cpp:120] Top shape: 70 (70)
I0929 13:11:01.808130 22545 net.cpp:120] Top shape: 70 (70)
I0929 13:11:01.808140 22545 net.cpp:120] Top shape: 70 (70)
I0929 13:11:01.808151 22545 net.cpp:120] Top shape: 70 (70)
I0929 13:11:01.808161 22545 layer_factory.hpp:74] Creating layer conv1_action
I0929 13:11:01.808187 22545 net.cpp:84] Creating Layer conv1_action
I0929 13:11:01.808198 22545 net.cpp:384] conv1_action <- data_action
I0929 13:11:01.808212 22545 net.cpp:342] conv1_action -> conv1_action
I0929 13:11:01.808231 22545 net.cpp:113] Setting up conv1_action
I0929 13:11:01.809218 22545 net.cpp:120] Top shape: 70 96 55 55 (20328000)
I0929 13:11:01.809252 22545 layer_factory.hpp:74] Creating layer relu1_action
I0929 13:11:01.809267 22545 net.cpp:84] Creating Layer relu1_action
I0929 13:11:01.809278 22545 net.cpp:384] relu1_action <- conv1_action
I0929 13:11:01.809290 22545 net.cpp:331] relu1_action -> conv1_action (in-place)
I0929 13:11:01.809303 22545 net.cpp:113] Setting up relu1_action
I0929 13:11:01.809316 22545 net.cpp:120] Top shape: 70 96 55 55 (20328000)
I0929 13:11:01.809326 22545 layer_factory.hpp:74] Creating layer pool1_action
I0929 13:11:01.809341 22545 net.cpp:84] Creating Layer pool1_action
I0929 13:11:01.809351 22545 net.cpp:384] pool1_action <- conv1_action
I0929 13:11:01.809367 22545 net.cpp:342] pool1_action -> pool1_action
I0929 13:11:01.809383 22545 net.cpp:113] Setting up pool1_action
I0929 13:11:01.809414 22545 net.cpp:120] Top shape: 70 96 27 27 (4898880)
I0929 13:11:01.809429 22545 layer_factory.hpp:74] Creating layer norm1_action
I0929 13:11:01.809449 22545 net.cpp:84] Creating Layer norm1_action
I0929 13:11:01.809461 22545 net.cpp:384] norm1_action <- pool1_action
I0929 13:11:01.809489 22545 net.cpp:342] norm1_action -> norm1_action
I0929 13:11:01.809520 22545 net.cpp:113] Setting up norm1_action
I0929 13:11:01.809540 22545 net.cpp:120] Top shape: 70 96 27 27 (4898880)
I0929 13:11:01.809553 22545 layer_factory.hpp:74] Creating layer conv2_action
I0929 13:11:01.809569 22545 net.cpp:84] Creating Layer conv2_action
I0929 13:11:01.809579 22545 net.cpp:384] conv2_action <- norm1_action
I0929 13:11:01.809593 22545 net.cpp:342] conv2_action -> conv2_action
I0929 13:11:01.809610 22545 net.cpp:113] Setting up conv2_action
I0929 13:11:01.814227 22545 net.cpp:120] Top shape: 70 256 27 27 (13063680)
I0929 13:11:01.814245 22545 layer_factory.hpp:74] Creating layer relu2_action
I0929 13:11:01.814255 22545 net.cpp:84] Creating Layer relu2_action
I0929 13:11:01.814262 22545 net.cpp:384] relu2_action <- conv2_action
I0929 13:11:01.814272 22545 net.cpp:331] relu2_action -> conv2_action (in-place)
I0929 13:11:01.814280 22545 net.cpp:113] Setting up relu2_action
I0929 13:11:01.814291 22545 net.cpp:120] Top shape: 70 256 27 27 (13063680)
I0929 13:11:01.814297 22545 layer_factory.hpp:74] Creating layer pool2_action
I0929 13:11:01.814306 22545 net.cpp:84] Creating Layer pool2_action
I0929 13:11:01.814313 22545 net.cpp:384] pool2_action <- conv2_action
I0929 13:11:01.814323 22545 net.cpp:342] pool2_action -> pool2_action
I0929 13:11:01.814332 22545 net.cpp:113] Setting up pool2_action
I0929 13:11:01.814344 22545 net.cpp:120] Top shape: 70 256 13 13 (3028480)
I0929 13:11:01.814352 22545 layer_factory.hpp:74] Creating layer norm2_action
I0929 13:11:01.814360 22545 net.cpp:84] Creating Layer norm2_action
I0929 13:11:01.814368 22545 net.cpp:384] norm2_action <- pool2_action
I0929 13:11:01.814383 22545 net.cpp:342] norm2_action -> norm2_action
I0929 13:11:01.814390 22545 net.cpp:113] Setting up norm2_action
I0929 13:11:01.814399 22545 net.cpp:120] Top shape: 70 256 13 13 (3028480)
I0929 13:11:01.814404 22545 layer_factory.hpp:74] Creating layer conv3_action
I0929 13:11:01.814414 22545 net.cpp:84] Creating Layer conv3_action
I0929 13:11:01.814419 22545 net.cpp:384] conv3_action <- norm2_action
I0929 13:11:01.814429 22545 net.cpp:342] conv3_action -> conv3_action
I0929 13:11:01.814437 22545 net.cpp:113] Setting up conv3_action
I0929 13:11:01.827178 22545 net.cpp:120] Top shape: 70 384 13 13 (4542720)
I0929 13:11:01.827225 22545 layer_factory.hpp:74] Creating layer relu3_action
I0929 13:11:01.827255 22545 net.cpp:84] Creating Layer relu3_action
I0929 13:11:01.827268 22545 net.cpp:384] relu3_action <- conv3_action
I0929 13:11:01.827285 22545 net.cpp:331] relu3_action -> conv3_action (in-place)
I0929 13:11:01.827296 22545 net.cpp:113] Setting up relu3_action
I0929 13:11:01.827303 22545 net.cpp:120] Top shape: 70 384 13 13 (4542720)
I0929 13:11:01.827309 22545 layer_factory.hpp:74] Creating layer conv4_action
I0929 13:11:01.827323 22545 net.cpp:84] Creating Layer conv4_action
I0929 13:11:01.827329 22545 net.cpp:384] conv4_action <- conv3_action
I0929 13:11:01.827337 22545 net.cpp:342] conv4_action -> conv4_action
I0929 13:11:01.827347 22545 net.cpp:113] Setting up conv4_action
I0929 13:11:01.836697 22545 net.cpp:120] Top shape: 70 384 13 13 (4542720)
I0929 13:11:01.836735 22545 layer_factory.hpp:74] Creating layer relu4_action
I0929 13:11:01.836747 22545 net.cpp:84] Creating Layer relu4_action
I0929 13:11:01.836755 22545 net.cpp:384] relu4_action <- conv4_action
I0929 13:11:01.836763 22545 net.cpp:331] relu4_action -> conv4_action (in-place)
I0929 13:11:01.836773 22545 net.cpp:113] Setting up relu4_action
I0929 13:11:01.836781 22545 net.cpp:120] Top shape: 70 384 13 13 (4542720)
I0929 13:11:01.836786 22545 layer_factory.hpp:74] Creating layer conv5_action
I0929 13:11:01.836799 22545 net.cpp:84] Creating Layer conv5_action
I0929 13:11:01.836804 22545 net.cpp:384] conv5_action <- conv4_action
I0929 13:11:01.836814 22545 net.cpp:342] conv5_action -> conv5_action
I0929 13:11:01.836824 22545 net.cpp:113] Setting up conv5_action
I0929 13:11:01.843144 22545 net.cpp:120] Top shape: 70 256 13 13 (3028480)
I0929 13:11:01.843195 22545 layer_factory.hpp:74] Creating layer relu5_action
I0929 13:11:01.843241 22545 net.cpp:84] Creating Layer relu5_action
I0929 13:11:01.843251 22545 net.cpp:384] relu5_action <- conv5_action
I0929 13:11:01.843269 22545 net.cpp:331] relu5_action -> conv5_action (in-place)
I0929 13:11:01.843281 22545 net.cpp:113] Setting up relu5_action
I0929 13:11:01.843288 22545 net.cpp:120] Top shape: 70 256 13 13 (3028480)
I0929 13:11:01.843294 22545 layer_factory.hpp:74] Creating layer pool5_action
I0929 13:11:01.843307 22545 net.cpp:84] Creating Layer pool5_action
I0929 13:11:01.843312 22545 net.cpp:384] pool5_action <- conv5_action
I0929 13:11:01.843319 22545 net.cpp:342] pool5_action -> pool5_action
I0929 13:11:01.843328 22545 net.cpp:113] Setting up pool5_action
I0929 13:11:01.843339 22545 net.cpp:120] Top shape: 70 256 6 6 (645120)
I0929 13:11:01.843344 22545 layer_factory.hpp:74] Creating layer fc6_action
I0929 13:11:01.843361 22545 net.cpp:84] Creating Layer fc6_action
I0929 13:11:01.843368 22545 net.cpp:384] fc6_action <- pool5_action
I0929 13:11:01.843376 22545 net.cpp:342] fc6_action -> fc6_action
I0929 13:11:01.843389 22545 net.cpp:113] Setting up fc6_action
I0929 13:11:02.328299 22545 net.cpp:120] Top shape: 70 4096 (286720)
I0929 13:11:02.328342 22545 layer_factory.hpp:74] Creating layer relu6_action
I0929 13:11:02.328361 22545 net.cpp:84] Creating Layer relu6_action
I0929 13:11:02.328372 22545 net.cpp:384] relu6_action <- fc6_action
I0929 13:11:02.328392 22545 net.cpp:331] relu6_action -> fc6_action (in-place)
I0929 13:11:02.328405 22545 net.cpp:113] Setting up relu6_action
I0929 13:11:02.328413 22545 net.cpp:120] Top shape: 70 4096 (286720)
I0929 13:11:02.328419 22545 layer_factory.hpp:74] Creating layer drop6_action
I0929 13:11:02.328430 22545 net.cpp:84] Creating Layer drop6_action
I0929 13:11:02.328435 22545 net.cpp:384] drop6_action <- fc6_action
I0929 13:11:02.328443 22545 net.cpp:331] drop6_action -> fc6_action (in-place)
I0929 13:11:02.328451 22545 net.cpp:113] Setting up drop6_action
I0929 13:11:02.328464 22545 net.cpp:120] Top shape: 70 4096 (286720)
I0929 13:11:02.328470 22545 layer_factory.hpp:74] Creating layer fc7_action
I0929 13:11:02.328483 22545 net.cpp:84] Creating Layer fc7_action
I0929 13:11:02.328490 22545 net.cpp:384] fc7_action <- fc6_action
I0929 13:11:02.328498 22545 net.cpp:342] fc7_action -> fc7_action
I0929 13:11:02.328507 22545 net.cpp:113] Setting up fc7_action
I0929 13:11:02.543318 22545 net.cpp:120] Top shape: 70 4096 (286720)
I0929 13:11:02.543361 22545 layer_factory.hpp:74] Creating layer relu7_action
I0929 13:11:02.543380 22545 net.cpp:84] Creating Layer relu7_action
I0929 13:11:02.543390 22545 net.cpp:384] relu7_action <- fc7_action
I0929 13:11:02.543411 22545 net.cpp:331] relu7_action -> fc7_action (in-place)
I0929 13:11:02.543424 22545 net.cpp:113] Setting up relu7_action
I0929 13:11:02.543432 22545 net.cpp:120] Top shape: 70 4096 (286720)
I0929 13:11:02.543438 22545 layer_factory.hpp:74] Creating layer drop7_action
I0929 13:11:02.543447 22545 net.cpp:84] Creating Layer drop7_action
I0929 13:11:02.543452 22545 net.cpp:384] drop7_action <- fc7_action
I0929 13:11:02.543458 22545 net.cpp:331] drop7_action -> fc7_action (in-place)
I0929 13:11:02.543467 22545 net.cpp:113] Setting up drop7_action
I0929 13:11:02.543478 22545 net.cpp:120] Top shape: 70 4096 (286720)
I0929 13:11:02.543484 22545 layer_factory.hpp:74] Creating layer fc8_CAD_action
I0929 13:11:02.543496 22545 net.cpp:84] Creating Layer fc8_CAD_action
I0929 13:11:02.543503 22545 net.cpp:384] fc8_CAD_action <- fc7_action
I0929 13:11:02.543509 22545 net.cpp:342] fc8_CAD_action -> fc8_CAD_action
I0929 13:11:02.543524 22545 net.cpp:113] Setting up fc8_CAD_action
I0929 13:11:02.543913 22545 net.cpp:120] Top shape: 70 7 (490)
I0929 13:11:02.543926 22545 layer_factory.hpp:74] Creating layer data_frame
I0929 13:11:02.543938 22545 net.cpp:84] Creating Layer data_frame
I0929 13:11:02.543946 22545 net.cpp:342] data_frame -> data_frame
I0929 13:11:02.543958 22545 net.cpp:342] data_frame -> label_frame
I0929 13:11:02.543972 22545 net.cpp:113] Setting up data_frame
I0929 13:11:02.548727 22545 db.cpp:34] Opened lmdb /cs/vml2/zhiweid/CVPR16_NEW/bp-rnn/experiments/0903/CAD_frame_train_lmdb_0903
I0929 13:11:02.549304 22545 data_layer.cpp:67] output data size: 5,3,227,227
I0929 13:11:02.549319 22545 data_transformer.cpp:22] Loading mean file from: imagenet_mean.binaryproto
I0929 13:11:02.552112 22545 net.cpp:120] Top shape: 5 3 227 227 (772935)
I0929 13:11:02.552135 22545 net.cpp:120] Top shape: 5 (5)
I0929 13:11:02.552145 22545 layer_factory.hpp:74] Creating layer label_frame_data_frame_1_split
I0929 13:11:02.552158 22545 net.cpp:84] Creating Layer label_frame_data_frame_1_split
I0929 13:11:02.552167 22545 net.cpp:384] label_frame_data_frame_1_split <- label_frame
I0929 13:11:02.552180 22545 net.cpp:342] label_frame_data_frame_1_split -> label_frame_data_frame_1_split_0
I0929 13:11:02.552192 22545 net.cpp:342] label_frame_data_frame_1_split -> label_frame_data_frame_1_split_1
I0929 13:11:02.552203 22545 net.cpp:113] Setting up label_frame_data_frame_1_split
I0929 13:11:02.552214 22545 net.cpp:120] Top shape: 5 (5)
I0929 13:11:02.552223 22545 net.cpp:120] Top shape: 5 (5)
I0929 13:11:02.552230 22545 layer_factory.hpp:74] Creating layer conv1_frame
I0929 13:11:02.552243 22545 net.cpp:84] Creating Layer conv1_frame
I0929 13:11:02.552253 22545 net.cpp:384] conv1_frame <- data_frame
I0929 13:11:02.552264 22545 net.cpp:342] conv1_frame -> conv1_frame
I0929 13:11:02.552275 22545 net.cpp:113] Setting up conv1_frame
I0929 13:11:02.552914 22545 net.cpp:120] Top shape: 5 96 55 55 (1452000)
I0929 13:11:02.552935 22545 layer_factory.hpp:74] Creating layer relu1_frame
I0929 13:11:02.552947 22545 net.cpp:84] Creating Layer relu1_frame
I0929 13:11:02.552954 22545 net.cpp:384] relu1_frame <- conv1_frame
I0929 13:11:02.552965 22545 net.cpp:331] relu1_frame -> conv1_frame (in-place)
I0929 13:11:02.552975 22545 net.cpp:113] Setting up relu1_frame
I0929 13:11:02.552985 22545 net.cpp:120] Top shape: 5 96 55 55 (1452000)
I0929 13:11:02.552994 22545 layer_factory.hpp:74] Creating layer pool1_frame
I0929 13:11:02.553004 22545 net.cpp:84] Creating Layer pool1_frame
I0929 13:11:02.553011 22545 net.cpp:384] pool1_frame <- conv1_frame
I0929 13:11:02.553022 22545 net.cpp:342] pool1_frame -> pool1_frame
I0929 13:11:02.553036 22545 net.cpp:113] Setting up pool1_frame
I0929 13:11:02.553050 22545 net.cpp:120] Top shape: 5 96 27 27 (349920)
I0929 13:11:02.553058 22545 layer_factory.hpp:74] Creating layer norm1_frame
I0929 13:11:02.553069 22545 net.cpp:84] Creating Layer norm1_frame
I0929 13:11:02.553077 22545 net.cpp:384] norm1_frame <- pool1_frame
I0929 13:11:02.553087 22545 net.cpp:342] norm1_frame -> norm1_frame
I0929 13:11:02.553098 22545 net.cpp:113] Setting up norm1_frame
I0929 13:11:02.553109 22545 net.cpp:120] Top shape: 5 96 27 27 (349920)
I0929 13:11:02.553117 22545 layer_factory.hpp:74] Creating layer conv2_frame
I0929 13:11:02.553128 22545 net.cpp:84] Creating Layer conv2_frame
I0929 13:11:02.553136 22545 net.cpp:384] conv2_frame <- norm1_frame
I0929 13:11:02.553148 22545 net.cpp:342] conv2_frame -> conv2_frame
I0929 13:11:02.553158 22545 net.cpp:113] Setting up conv2_frame
I0929 13:11:02.558864 22545 net.cpp:120] Top shape: 5 256 27 27 (933120)
I0929 13:11:02.558900 22545 layer_factory.hpp:74] Creating layer relu2_frame
I0929 13:11:02.558920 22545 net.cpp:84] Creating Layer relu2_frame
I0929 13:11:02.558936 22545 net.cpp:384] relu2_frame <- conv2_frame
I0929 13:11:02.558954 22545 net.cpp:331] relu2_frame -> conv2_frame (in-place)
I0929 13:11:02.558966 22545 net.cpp:113] Setting up relu2_frame
I0929 13:11:02.558977 22545 net.cpp:120] Top shape: 5 256 27 27 (933120)
I0929 13:11:02.558984 22545 layer_factory.hpp:74] Creating layer pool2_frame
I0929 13:11:02.559003 22545 net.cpp:84] Creating Layer pool2_frame
I0929 13:11:02.559012 22545 net.cpp:384] pool2_frame <- conv2_frame
I0929 13:11:02.559023 22545 net.cpp:342] pool2_frame -> pool2_frame
I0929 13:11:02.559036 22545 net.cpp:113] Setting up pool2_frame
I0929 13:11:02.559048 22545 net.cpp:120] Top shape: 5 256 13 13 (216320)
I0929 13:11:02.559063 22545 layer_factory.hpp:74] Creating layer norm2_frame
I0929 13:11:02.559098 22545 net.cpp:84] Creating Layer norm2_frame
I0929 13:11:02.559106 22545 net.cpp:384] norm2_frame <- pool2_frame
I0929 13:11:02.559116 22545 net.cpp:342] norm2_frame -> norm2_frame
I0929 13:11:02.559128 22545 net.cpp:113] Setting up norm2_frame
I0929 13:11:02.559139 22545 net.cpp:120] Top shape: 5 256 13 13 (216320)
I0929 13:11:02.559146 22545 layer_factory.hpp:74] Creating layer conv3_frame
I0929 13:11:02.559161 22545 net.cpp:84] Creating Layer conv3_frame
I0929 13:11:02.559170 22545 net.cpp:384] conv3_frame <- norm2_frame
I0929 13:11:02.559183 22545 net.cpp:342] conv3_frame -> conv3_frame
I0929 13:11:02.559195 22545 net.cpp:113] Setting up conv3_frame
I0929 13:11:02.572252 22545 net.cpp:120] Top shape: 5 384 13 13 (324480)
I0929 13:11:02.572276 22545 layer_factory.hpp:74] Creating layer relu3_frame
I0929 13:11:02.572293 22545 net.cpp:84] Creating Layer relu3_frame
I0929 13:11:02.572305 22545 net.cpp:384] relu3_frame <- conv3_frame
I0929 13:11:02.572314 22545 net.cpp:331] relu3_frame -> conv3_frame (in-place)
I0929 13:11:02.572322 22545 net.cpp:113] Setting up relu3_frame
I0929 13:11:02.572329 22545 net.cpp:120] Top shape: 5 384 13 13 (324480)
I0929 13:11:02.572335 22545 layer_factory.hpp:74] Creating layer conv4_frame
I0929 13:11:02.572345 22545 net.cpp:84] Creating Layer conv4_frame
I0929 13:11:02.572350 22545 net.cpp:384] conv4_frame <- conv3_frame
I0929 13:11:02.572360 22545 net.cpp:342] conv4_frame -> conv4_frame
I0929 13:11:02.572370 22545 net.cpp:113] Setting up conv4_frame
I0929 13:11:02.580936 22545 net.cpp:120] Top shape: 5 384 13 13 (324480)
I0929 13:11:02.580953 22545 layer_factory.hpp:74] Creating layer relu4_frame
I0929 13:11:02.580967 22545 net.cpp:84] Creating Layer relu4_frame
I0929 13:11:02.580973 22545 net.cpp:384] relu4_frame <- conv4_frame
I0929 13:11:02.580981 22545 net.cpp:331] relu4_frame -> conv4_frame (in-place)
I0929 13:11:02.580989 22545 net.cpp:113] Setting up relu4_frame
I0929 13:11:02.580996 22545 net.cpp:120] Top shape: 5 384 13 13 (324480)
I0929 13:11:02.581001 22545 layer_factory.hpp:74] Creating layer conv5_frame
I0929 13:11:02.581012 22545 net.cpp:84] Creating Layer conv5_frame
I0929 13:11:02.581017 22545 net.cpp:384] conv5_frame <- conv4_frame
I0929 13:11:02.581024 22545 net.cpp:342] conv5_frame -> conv5_frame
I0929 13:11:02.581032 22545 net.cpp:113] Setting up conv5_frame
I0929 13:11:02.587074 22545 net.cpp:120] Top shape: 5 256 13 13 (216320)
I0929 13:11:02.587093 22545 layer_factory.hpp:74] Creating layer relu5_frame
I0929 13:11:02.587108 22545 net.cpp:84] Creating Layer relu5_frame
I0929 13:11:02.587121 22545 net.cpp:384] relu5_frame <- conv5_frame
I0929 13:11:02.587128 22545 net.cpp:331] relu5_frame -> conv5_frame (in-place)
I0929 13:11:02.587136 22545 net.cpp:113] Setting up relu5_frame
I0929 13:11:02.587144 22545 net.cpp:120] Top shape: 5 256 13 13 (216320)
I0929 13:11:02.587149 22545 layer_factory.hpp:74] Creating layer pool5_frame
I0929 13:11:02.587158 22545 net.cpp:84] Creating Layer pool5_frame
I0929 13:11:02.587163 22545 net.cpp:384] pool5_frame <- conv5_frame
I0929 13:11:02.587173 22545 net.cpp:342] pool5_frame -> pool5_frame
I0929 13:11:02.587182 22545 net.cpp:113] Setting up pool5_frame
I0929 13:11:02.587193 22545 net.cpp:120] Top shape: 5 256 6 6 (46080)
I0929 13:11:02.587198 22545 layer_factory.hpp:74] Creating layer fc6_frame
I0929 13:11:02.587208 22545 net.cpp:84] Creating Layer fc6_frame
I0929 13:11:02.587213 22545 net.cpp:384] fc6_frame <- pool5_frame
I0929 13:11:02.587220 22545 net.cpp:342] fc6_frame -> fc6_frame
I0929 13:11:02.587229 22545 net.cpp:113] Setting up fc6_frame
I0929 13:11:03.071779 22545 net.cpp:120] Top shape: 5 4096 (20480)
I0929 13:11:03.071821 22545 layer_factory.hpp:74] Creating layer relu6_frame
I0929 13:11:03.071842 22545 net.cpp:84] Creating Layer relu6_frame
I0929 13:11:03.071854 22545 net.cpp:384] relu6_frame <- fc6_frame
I0929 13:11:03.071871 22545 net.cpp:331] relu6_frame -> fc6_frame (in-place)
I0929 13:11:03.071887 22545 net.cpp:113] Setting up relu6_frame
I0929 13:11:03.071915 22545 net.cpp:120] Top shape: 5 4096 (20480)
I0929 13:11:03.071921 22545 layer_factory.hpp:74] Creating layer drop6_frame
I0929 13:11:03.071930 22545 net.cpp:84] Creating Layer drop6_frame
I0929 13:11:03.071935 22545 net.cpp:384] drop6_frame <- fc6_frame
I0929 13:11:03.071943 22545 net.cpp:331] drop6_frame -> fc6_frame (in-place)
I0929 13:11:03.071950 22545 net.cpp:113] Setting up drop6_frame
I0929 13:11:03.071959 22545 net.cpp:120] Top shape: 5 4096 (20480)
I0929 13:11:03.071964 22545 layer_factory.hpp:74] Creating layer fc7_frame
I0929 13:11:03.071974 22545 net.cpp:84] Creating Layer fc7_frame
I0929 13:11:03.071979 22545 net.cpp:384] fc7_frame <- fc6_frame
I0929 13:11:03.071988 22545 net.cpp:342] fc7_frame -> fc7_frame
I0929 13:11:03.071997 22545 net.cpp:113] Setting up fc7_frame
I0929 13:11:03.287775 22545 net.cpp:120] Top shape: 5 4096 (20480)
I0929 13:11:03.287818 22545 layer_factory.hpp:74] Creating layer relu7_frame
I0929 13:11:03.287839 22545 net.cpp:84] Creating Layer relu7_frame
I0929 13:11:03.287852 22545 net.cpp:384] relu7_frame <- fc7_frame
I0929 13:11:03.287868 22545 net.cpp:331] relu7_frame -> fc7_frame (in-place)
I0929 13:11:03.287879 22545 net.cpp:113] Setting up relu7_frame
I0929 13:11:03.287888 22545 net.cpp:120] Top shape: 5 4096 (20480)
I0929 13:11:03.287892 22545 layer_factory.hpp:74] Creating layer drop7_frame
I0929 13:11:03.287901 22545 net.cpp:84] Creating Layer drop7_frame
I0929 13:11:03.287906 22545 net.cpp:384] drop7_frame <- fc7_frame
I0929 13:11:03.287912 22545 net.cpp:331] drop7_frame -> fc7_frame (in-place)
I0929 13:11:03.287920 22545 net.cpp:113] Setting up drop7_frame
I0929 13:11:03.287928 22545 net.cpp:120] Top shape: 5 4096 (20480)
I0929 13:11:03.287935 22545 layer_factory.hpp:74] Creating layer fc8_CAD_frame
I0929 13:11:03.287945 22545 net.cpp:84] Creating Layer fc8_CAD_frame
I0929 13:11:03.287950 22545 net.cpp:384] fc8_CAD_frame <- fc7_frame
I0929 13:11:03.287957 22545 net.cpp:342] fc8_CAD_frame -> fc8_CAD_frame
I0929 13:11:03.287966 22545 net.cpp:113] Setting up fc8_CAD_frame
I0929 13:11:03.288250 22545 net.cpp:120] Top shape: 5 5 (25)
I0929 13:11:03.288261 22545 layer_factory.hpp:74] Creating layer fc8_CAD_frame_fc8_CAD_frame_0_split
I0929 13:11:03.288270 22545 net.cpp:84] Creating Layer fc8_CAD_frame_fc8_CAD_frame_0_split
I0929 13:11:03.288275 22545 net.cpp:384] fc8_CAD_frame_fc8_CAD_frame_0_split <- fc8_CAD_frame
I0929 13:11:03.288282 22545 net.cpp:342] fc8_CAD_frame_fc8_CAD_frame_0_split -> fc8_CAD_frame_fc8_CAD_frame_0_split_0
I0929 13:11:03.288291 22545 net.cpp:342] fc8_CAD_frame_fc8_CAD_frame_0_split -> fc8_CAD_frame_fc8_CAD_frame_0_split_1
I0929 13:11:03.288298 22545 net.cpp:113] Setting up fc8_CAD_frame_fc8_CAD_frame_0_split
I0929 13:11:03.288306 22545 net.cpp:120] Top shape: 5 5 (25)
I0929 13:11:03.288313 22545 net.cpp:120] Top shape: 5 5 (25)
I0929 13:11:03.288318 22545 layer_factory.hpp:74] Creating layer prob_frame
I0929 13:11:03.288327 22545 net.cpp:84] Creating Layer prob_frame
I0929 13:11:03.288332 22545 net.cpp:384] prob_frame <- fc8_CAD_frame_fc8_CAD_frame_0_split_0
I0929 13:11:03.288339 22545 net.cpp:342] prob_frame -> fc8_CAD_frame_prob
I0929 13:11:03.288347 22545 net.cpp:113] Setting up prob_frame
I0929 13:11:03.288362 22545 net.cpp:120] Top shape: 5 5 (25)
I0929 13:11:03.288367 22545 layer_factory.hpp:74] Creating layer Data_arrange_layer_filter
I0929 13:11:06.685109 22545 net.cpp:84] Creating Layer Data_arrange_layer_filter
I0929 13:11:06.685147 22545 net.cpp:384] Data_arrange_layer_filter <- fc8_CAD_action
I0929 13:11:06.685163 22545 net.cpp:384] Data_arrange_layer_filter <- label_action_data_action_1_split_0
I0929 13:11:06.685178 22545 net.cpp:342] Data_arrange_layer_filter -> fc9_filtered
I0929 13:11:06.685199 22545 net.cpp:113] Setting up Data_arrange_layer_filter
I0929 13:11:06.685297 22545 net.cpp:120] Top shape: 5 98 (490)
I0929 13:11:06.685308 22545 layer_factory.hpp:74] Creating layer concatenation_s_a_p
I0929 13:11:06.685322 22545 net.cpp:84] Creating Layer concatenation_s_a_p
I0929 13:11:06.685333 22545 net.cpp:384] concatenation_s_a_p <- fc8_CAD_frame_prob
I0929 13:11:06.685360 22545 net.cpp:384] concatenation_s_a_p <- fc9_filtered
I0929 13:11:06.685369 22545 net.cpp:342] concatenation_s_a_p -> concat_all0
I0929 13:11:06.685379 22545 net.cpp:113] Setting up concatenation_s_a_p
I0929 13:11:06.685390 22545 net.cpp:120] Top shape: 5 103 (515)
I0929 13:11:06.685396 22545 layer_factory.hpp:74] Creating layer concat_all0_concatenation_s_a_p_0_split
I0929 13:11:06.685405 22545 net.cpp:84] Creating Layer concat_all0_concatenation_s_a_p_0_split
I0929 13:11:06.685411 22545 net.cpp:384] concat_all0_concatenation_s_a_p_0_split <- concat_all0
I0929 13:11:06.685418 22545 net.cpp:342] concat_all0_concatenation_s_a_p_0_split -> concat_all0_concatenation_s_a_p_0_split_0
I0929 13:11:06.685426 22545 net.cpp:342] concat_all0_concatenation_s_a_p_0_split -> concat_all0_concatenation_s_a_p_0_split_1
I0929 13:11:06.685436 22545 net.cpp:342] concat_all0_concatenation_s_a_p_0_split -> concat_all0_concatenation_s_a_p_0_split_2
I0929 13:11:06.685446 22545 net.cpp:342] concat_all0_concatenation_s_a_p_0_split -> concat_all0_concatenation_s_a_p_0_split_3
I0929 13:11:06.685453 22545 net.cpp:342] concat_all0_concatenation_s_a_p_0_split -> concat_all0_concatenation_s_a_p_0_split_4
I0929 13:11:06.685462 22545 net.cpp:342] concat_all0_concatenation_s_a_p_0_split -> concat_all0_concatenation_s_a_p_0_split_5
I0929 13:11:06.685469 22545 net.cpp:113] Setting up concat_all0_concatenation_s_a_p_0_split
I0929 13:11:06.685495 22545 net.cpp:120] Top shape: 5 103 (515)
I0929 13:11:06.685508 22545 net.cpp:120] Top shape: 5 103 (515)
I0929 13:11:06.685518 22545 net.cpp:120] Top shape: 5 103 (515)
I0929 13:11:06.685528 22545 net.cpp:120] Top shape: 5 103 (515)
I0929 13:11:06.685539 22545 net.cpp:120] Top shape: 5 103 (515)
I0929 13:11:06.685546 22545 net.cpp:120] Top shape: 5 103 (515)
I0929 13:11:06.685551 22545 layer_factory.hpp:74] Creating layer Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageIn1
I0929 13:11:06.691977 22545 net.cpp:84] Creating Layer Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageIn1
I0929 13:11:06.692003 22545 net.cpp:384] Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageIn1 <- concat_all0_concatenation_s_a_p_0_split_0
I0929 13:11:06.692019 22545 net.cpp:384] Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageIn1 <- label_action_data_action_1_split_1
I0929 13:11:06.692036 22545 net.cpp:342] Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageIn1 -> A_A_MessageIn1
I0929 13:11:06.692055 22545 net.cpp:342] Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageIn1 -> A_S_MessageIn1
I0929 13:11:06.692075 22545 net.cpp:342] Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageIn1 -> S_A_MessageIn1
I0929 13:11:06.692091 22545 net.cpp:113] Setting up Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageIn1
I0929 13:11:06.692710 22545 net.cpp:120] Top shape: 1 7 (7)
I0929 13:11:06.692736 22545 net.cpp:120] Top shape: 1 7 (7)
I0929 13:11:06.692750 22545 net.cpp:120] Top shape: 1 5 (5)
I0929 13:11:06.692762 22545 layer_factory.hpp:74] Creating layer Belief_Propagation_Recurrent_Neural_Network_A_A_Message1
I0929 13:11:06.692783 22545 net.cpp:84] Creating Layer Belief_Propagation_Recurrent_Neural_Network_A_A_Message1
I0929 13:11:06.692796 22545 net.cpp:384] Belief_Propagation_Recurrent_Neural_Network_A_A_Message1 <- A_A_MessageIn1
I0929 13:11:06.692814 22545 net.cpp:342] Belief_Propagation_Recurrent_Neural_Network_A_A_Message1 -> A_A_MessageOut1
I0929 13:11:06.692845 22545 net.cpp:113] Setting up Belief_Propagation_Recurrent_Neural_Network_A_A_Message1
I0929 13:11:06.692893 22545 net.cpp:120] Top shape: 1 7 (7)
I0929 13:11:06.692922 22545 layer_factory.hpp:74] Creating layer Belief_Propagation_Recurrent_Neural_Network_A_S_Message1
I0929 13:11:06.692940 22545 net.cpp:84] Creating Layer Belief_Propagation_Recurrent_Neural_Network_A_S_Message1
I0929 13:11:06.692953 22545 net.cpp:384] Belief_Propagation_Recurrent_Neural_Network_A_S_Message1 <- A_S_MessageIn1
I0929 13:11:06.692975 22545 net.cpp:342] Belief_Propagation_Recurrent_Neural_Network_A_S_Message1 -> A_S_MessageOut1
I0929 13:11:06.693016 22545 net.cpp:113] Setting up Belief_Propagation_Recurrent_Neural_Network_A_S_Message1
I0929 13:11:06.693042 22545 net.cpp:120] Top shape: 1 5 (5)
I0929 13:11:06.693060 22545 layer_factory.hpp:74] Creating layer Belief_Propagation_Recurrent_Neural_Network_S_A_Message1
I0929 13:11:06.693078 22545 net.cpp:84] Creating Layer Belief_Propagation_Recurrent_Neural_Network_S_A_Message1
I0929 13:11:06.693089 22545 net.cpp:384] Belief_Propagation_Recurrent_Neural_Network_S_A_Message1 <- S_A_MessageIn1
I0929 13:11:06.693106 22545 net.cpp:342] Belief_Propagation_Recurrent_Neural_Network_S_A_Message1 -> S_A_MessageOut1
I0929 13:11:06.693123 22545 net.cpp:113] Setting up Belief_Propagation_Recurrent_Neural_Network_S_A_Message1
I0929 13:11:06.693148 22545 net.cpp:120] Top shape: 1 7 (7)
I0929 13:11:06.693164 22545 layer_factory.hpp:74] Creating layer Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut1
I0929 13:11:06.697831 22545 net.cpp:84] Creating Layer Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut1
I0929 13:11:06.697918 22545 net.cpp:384] Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut1 <- A_A_MessageOut1
I0929 13:11:06.697950 22545 net.cpp:384] Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut1 <- A_S_MessageOut1
I0929 13:11:06.697967 22545 net.cpp:384] Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut1 <- S_A_MessageOut1
I0929 13:11:06.697981 22545 net.cpp:384] Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut1 <- label_action_data_action_1_split_2
I0929 13:11:06.697995 22545 net.cpp:384] Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut1 <- concat_all0_concatenation_s_a_p_0_split_1
I0929 13:11:06.698014 22545 net.cpp:342] Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut1 -> scene_1
I0929 13:11:06.698036 22545 net.cpp:342] Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut1 -> action_1
I0929 13:11:06.698053 22545 net.cpp:113] Setting up Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut1
I0929 13:11:06.698444 22545 net.cpp:120] Top shape: 5 10 (50)
I0929 13:11:06.698469 22545 net.cpp:120] Top shape: 70 21 (1470)
I0929 13:11:06.698485 22545 layer_factory.hpp:74] Creating layer scene_1_Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut1_0_split
I0929 13:11:06.698508 22545 net.cpp:84] Creating Layer scene_1_Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut1_0_split
I0929 13:11:06.698521 22545 net.cpp:384] scene_1_Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut1_0_split <- scene_1
I0929 13:11:06.698539 22545 net.cpp:342] scene_1_Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut1_0_split -> scene_1_Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut1_0_split_0
I0929 13:11:06.698616 22545 net.cpp:342] scene_1_Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut1_0_split -> scene_1_Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut1_0_split_1
I0929 13:11:06.698635 22545 net.cpp:113] Setting up scene_1_Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut1_0_split
I0929 13:11:06.698653 22545 net.cpp:120] Top shape: 5 10 (50)
I0929 13:11:06.698667 22545 net.cpp:120] Top shape: 5 10 (50)
I0929 13:11:06.698678 22545 layer_factory.hpp:74] Creating layer action_1_Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut1_1_split
I0929 13:11:06.698693 22545 net.cpp:84] Creating Layer action_1_Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut1_1_split
I0929 13:11:06.698704 22545 net.cpp:384] action_1_Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut1_1_split <- action_1
I0929 13:11:06.698720 22545 net.cpp:342] action_1_Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut1_1_split -> action_1_Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut1_1_split_0
I0929 13:11:06.698737 22545 net.cpp:342] action_1_Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut1_1_split -> action_1_Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut1_1_split_1
I0929 13:11:06.698781 22545 net.cpp:113] Setting up action_1_Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut1_1_split
I0929 13:11:06.698799 22545 net.cpp:120] Top shape: 70 21 (1470)
I0929 13:11:06.698812 22545 net.cpp:120] Top shape: 70 21 (1470)
I0929 13:11:06.698823 22545 layer_factory.hpp:74] Creating layer Belief_Propagation_Recurrent_Neural_Network_Scene1
I0929 13:11:06.698840 22545 net.cpp:84] Creating Layer Belief_Propagation_Recurrent_Neural_Network_Scene1
I0929 13:11:06.698853 22545 net.cpp:384] Belief_Propagation_Recurrent_Neural_Network_Scene1 <- scene_1_Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut1_0_split_0
I0929 13:11:06.698870 22545 net.cpp:342] Belief_Propagation_Recurrent_Neural_Network_Scene1 -> scene_out1
I0929 13:11:06.698887 22545 net.cpp:113] Setting up Belief_Propagation_Recurrent_Neural_Network_Scene1
I0929 13:11:06.698915 22545 net.cpp:120] Top shape: 5 5 (25)
I0929 13:11:06.698933 22545 layer_factory.hpp:74] Creating layer Belief_Propagation_Recurrent_Neural_Network_Action1
I0929 13:11:06.698951 22545 net.cpp:84] Creating Layer Belief_Propagation_Recurrent_Neural_Network_Action1
I0929 13:11:06.698963 22545 net.cpp:384] Belief_Propagation_Recurrent_Neural_Network_Action1 <- action_1_Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut1_1_split_0
I0929 13:11:06.698981 22545 net.cpp:342] Belief_Propagation_Recurrent_Neural_Network_Action1 -> action_out1
I0929 13:11:06.698998 22545 net.cpp:113] Setting up Belief_Propagation_Recurrent_Neural_Network_Action1
I0929 13:11:06.699026 22545 net.cpp:120] Top shape: 70 7 (490)
I0929 13:11:06.699043 22545 layer_factory.hpp:74] Creating layer Belief_Propagation_Recurrent_Neural_Network_message_reshape1
I0929 13:11:06.703526 22545 net.cpp:84] Creating Layer Belief_Propagation_Recurrent_Neural_Network_message_reshape1
I0929 13:11:06.703550 22545 net.cpp:384] Belief_Propagation_Recurrent_Neural_Network_message_reshape1 <- action_out1
I0929 13:11:06.703580 22545 net.cpp:342] Belief_Propagation_Recurrent_Neural_Network_message_reshape1 -> action_out_reshaped1
I0929 13:11:06.703603 22545 net.cpp:113] Setting up Belief_Propagation_Recurrent_Neural_Network_message_reshape1
I0929 13:11:06.703665 22545 net.cpp:120] Top shape: 5 98 (490)
I0929 13:11:06.703682 22545 layer_factory.hpp:74] Creating layer Belief_Propagation_Recurrent_Neural_Network_Normalize_Scene_1
I0929 13:11:06.703699 22545 net.cpp:84] Creating Layer Belief_Propagation_Recurrent_Neural_Network_Normalize_Scene_1
I0929 13:11:06.703711 22545 net.cpp:384] Belief_Propagation_Recurrent_Neural_Network_Normalize_Scene_1 <- scene_1_Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut1_0_split_1
I0929 13:11:06.703727 22545 net.cpp:342] Belief_Propagation_Recurrent_Neural_Network_Normalize_Scene_1 -> scene_normalized_1
I0929 13:11:06.703744 22545 net.cpp:113] Setting up Belief_Propagation_Recurrent_Neural_Network_Normalize_Scene_1
I0929 13:11:06.703763 22545 net.cpp:120] Top shape: 5 10 (50)
I0929 13:11:06.703775 22545 layer_factory.hpp:74] Creating layer Belief_Propagation_Recurrent_Neural_Network_Normalize_Action_1
I0929 13:11:06.703800 22545 net.cpp:84] Creating Layer Belief_Propagation_Recurrent_Neural_Network_Normalize_Action_1
I0929 13:11:06.703814 22545 net.cpp:384] Belief_Propagation_Recurrent_Neural_Network_Normalize_Action_1 <- action_1_Belief_Propagation_Recurrent_Neural_Network_ArrangeMessageOut1_1_split_1
I0929 13:11:06.703830 22545 net.cpp:342] Belief_Propagation_Recurrent_Neural_Network_Normalize_Action_1 -> action_normalized_1
I0929 13:11:06.703845 22545 net.cpp:113] Setting up Belief_Propagation_Recurrent_Neural_Network_Normalize_Action_1
I0929 13:11:06.703863 22545 net.cpp:120] Top shape: 70 21 (1470)
I0929 13:11:06.703876 22545 layer_factory.hpp:74] Creating layer Belief_Propagation_Recurrent_Neural_Network_Data_arrange_layer_filter1
I0929 13:11:06.703922 22545 net.cpp:84] Creating Layer Belief_Propagation_Recurrent_Neural_Network_Data_arrange_layer_filter1
I0929 13:11:06.703945 22545 net.cpp:384] Belief_Propagation_Recurrent_Neural_Network_Data_arrange_layer_filter1 <- action_normalized_1
I0929 13:11:06.703977 22545 net.cpp:384] Belief_Propagation_Recurrent_Neural_Network_Data_arrange_layer_filter1 <- label_action_data_action_1_split_3
I0929 13:11:06.703996 22545 net.cpp:342] Belief_Propagation_Recurrent_Neural_Network_Data_arrange_layer_filter1 -> fc9_filtered1
I0929 13:11:06.704013 22545 net.cpp:113] Setting up Belief_Propagation_Recurrent_Neural_Network_Data_arrange_layer_filter1
I0929 13:11:06.704092 22545 net.cpp:120] Top shape: 0 0 (0)
I0929 13:11:06.704112 22545 layer_factory.hpp:74] Creating layer Belief_Propagation_Recurrent_Neural_Network_concatenation_s_a1
I0929 13:11:06.704128 22545 net.cpp:84] Creating Layer Belief_Propagation_Recurrent_Neural_Network_concatenation_s_a1
I0929 13:11:06.704140 22545 net.cpp:384] Belief_Propagation_Recurrent_Neural_Network_concatenation_s_a1 <- scene_normalized_1
I0929 13:11:06.704155 22545 net.cpp:384] Belief_Propagation_Recurrent_Neural_Network_concatenation_s_a1 <- fc9_filtered1
I0929 13:11:06.704171 22545 net.cpp:342] Belief_Propagation_Recurrent_Neural_Network_concatenation_s_a1 -> concat_all1
I0929 13:11:06.704188 22545 net.cpp:113] Setting up Belief_Propagation_Recurrent_Neural_Network_concatenation_s_a1
F0929 13:11:06.704226 22545 concat_layer.cpp:43] Check failed: top_shape[j] == bottom[i]->shape(j) (5 vs. 0) All inputs must have the same shape, except at concat_axis.
*** Check failure stack trace: ***
    @     0x7fccf8659b5d  google::LogMessage::Fail()
    @     0x7fccf865db77  google::LogMessage::SendToLog()
    @     0x7fccf865b9f9  google::LogMessage::Flush()
    @     0x7fccf865bcfd  google::LogMessageFatal::~LogMessageFatal()
    @     0x7fccfe4890bd  caffe::ConcatLayer<>::Reshape()
    @     0x7fccfe52ace8  caffe::Net<>::Init()
    @     0x7fccfe52d422  caffe::Net<>::Net()
    @     0x7fccfe530412  caffe::Solver<>::InitTrainNet()
    @     0x7fccfe533a3f  caffe::Solver<>::Init()
    @     0x7fccfe533e75  caffe::Solver<>::Solver()
    @           0x40b18d  caffe::SGDSolver<>::SGDSolver()
    @           0x40e940  caffe::GetSolver<>()
    @           0x4096be  train()
    @           0x406c0e  main
    @       0x3a1201ed5d  (unknown)
    @           0x4062d9  (unknown)
finetunes1_RNN.sh: line 1: 22545 Aborted                 ../caffe-master/build/tools/caffe train -weights net_surgery_forzhiwei.caffemodel -solver=solver_finetune_RNN.prototxt --gpu=0
